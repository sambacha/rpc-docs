{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-\\.]+"},"docs":[{"location":"","text":"Welcome to MkDocs \uf0c1 For full documentation visit mkdocs.org . Commands \uf0c1 mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout \uf0c1 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"api/get/eth_accounts/","text":"eth_accounts \uf0c1 /v1/jsonrpc/:network/eth_accounts \uf0c1 Returns a list of addresses owned by client. REQUEST \uf0c1 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_accounts HEADERS Content-Type: application/json EXAMPLE // HTTP GET curl https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_accounts // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_accounts\" , \"params\" : [] , \"id\" :73 } RESPONSE \uf0c1 RESULT FIELDS ADDRESSES - arrays of hex codes as strings representing the addresses owned by the client BODY { jsonrpc : \"2.0\" , id : 1 , result : [ \"0xc94770007dda54cF92009BFF0dE90c06F603a09f\" ] }","title":"eth_accounts"},{"location":"api/get/eth_accounts/#eth_accounts","text":"","title":"eth_accounts"},{"location":"api/get/eth_accounts/#v1jsonrpcnetworketh_accounts","text":"Returns a list of addresses owned by client.","title":"/v1/jsonrpc/:network/eth_accounts"},{"location":"api/get/eth_accounts/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_accounts","title":"REQUEST"},{"location":"api/get/eth_accounts/#response","text":"","title":"RESPONSE"},{"location":"api/get/eth_blockNumber/","text":"eth_blockNumber \uf0c1 /v1/jsonrpc/:network/eth_blockNumber \uf0c1 Returns the number of most recent block. REQUEST \uf0c1 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_blockNumber HEADERS Content-Type: application/json EXAMPLE // HTTP GET curl https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_blockNumber // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_blockNumber\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_blockNumber\" , \"params\" : [] , \"id\" :73 } RESPONSE \uf0c1 RESULT FIELDS BLOCK NUMBER - a hex code of an integer representing the current block number the client is on. BODY { jsonrpc : \"2.0\" , id : 1 , result : \"0x5c174e\" }","title":"eth_blockNumber"},{"location":"api/get/eth_blockNumber/#eth_blocknumber","text":"","title":"eth_blockNumber"},{"location":"api/get/eth_blockNumber/#v1jsonrpcnetworketh_blocknumber","text":"Returns the number of most recent block.","title":"/v1/jsonrpc/:network/eth_blockNumber"},{"location":"api/get/eth_blockNumber/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_blockNumber","title":"REQUEST"},{"location":"api/get/eth_blockNumber/#response","text":"","title":"RESPONSE"},{"location":"api/get/eth_gasPrice/","text":"eth_gasPrice \uf0c1 /v1/jsonrpc/:network/eth_gasPrice \uf0c1 Returns the number of hashes per second that the node is mining with. REQUEST \uf0c1 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_gasPrice HEADERS Content-Type: application/json EXAMPLE // HTTP GET curl https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_gasPrice // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_gasPrice\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_gasPrice\" , \"params\" : [] , \"id\" :73 } RESPONSE \uf0c1 RESULT FIELDS HASHRATE - a hex code of an integer representing the current gas price in wei. BODY { jsonrpc : \"2.0\" , id : 1 , result : \"0x3b9acde7\" }","title":"eth_gasPrice"},{"location":"api/get/eth_gasPrice/#eth_gasprice","text":"","title":"eth_gasPrice"},{"location":"api/get/eth_gasPrice/#v1jsonrpcnetworketh_gasprice","text":"Returns the number of hashes per second that the node is mining with.","title":"/v1/jsonrpc/:network/eth_gasPrice"},{"location":"api/get/eth_gasPrice/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_gasPrice","title":"REQUEST"},{"location":"api/get/eth_gasPrice/#response","text":"","title":"RESPONSE"},{"location":"api/get/eth_getBalance/","text":"eth_getBalance \uf0c1 /v1/jsonrpc/:network/eth_getBalance \uf0c1 Returns the balance of the account of given address. REQUEST \uf0c1 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getBalance?params=:paramsJSONArray HEADERS Content-Type: application/json REQUEST PARAMS ADDRESS [required] - a string representing the address (20 bytes) to check for balance BLOCK PARAMETER [required] - an integer block number, or the string \u201clatest\u201d, \u201cearliest\u201d or \u201cpending\u201d, see the default block parameter EXAMPLE // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getBalance --data-urlencode 'params=[\"0xc94770007dda54cF92009BFF0dE90c06F603a09f\",\"latest\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBalance\",\"params\": [\"0xc94770007dda54cF92009BFF0dE90c06F603a09f\", \"latest\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getBalance\" , \"params\" : [ \"0xc94770007dda54cF92009BFF0dE90c06F603a09f\" , \"latest\" ] , \"id\" :73 } RESPONSE \uf0c1 RESULT FIELDS BALANCE - integer of the current balance in wei. BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x29a33d8a9314006\" }","title":"eth_getBalance"},{"location":"api/get/eth_getBalance/#eth_getbalance","text":"","title":"eth_getBalance"},{"location":"api/get/eth_getBalance/#v1jsonrpcnetworketh_getbalance","text":"Returns the balance of the account of given address.","title":"/v1/jsonrpc/:network/eth_getBalance"},{"location":"api/get/eth_getBalance/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getBalance?params=:paramsJSONArray","title":"REQUEST"},{"location":"api/get/eth_getBalance/#response","text":"","title":"RESPONSE"},{"location":"api/get/eth_getBlockByHash/","text":"eth_getBlockByHash \uf0c1 /v1/jsonrpc/:network/eth_getBlockByHash \uf0c1 Returns information about a block by hash. REQUEST \uf0c1 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getBlockByHash?params=:paramsJSONArray HEADERS Content-Type: application/json REQUEST PARAMS BLOCK HASH [required] - a string representing the hash (32 bytes) of a block SHOW TRANSACTION DETAILS FLAG [required] - if set to true, it returns the full transaction objects, if false only the hashes of the transactions. EXAMPLE // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getBlockByHash --data-urlencode 'params=[\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\",false]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockByHash\",\"params\": [\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\",false],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getBlockByHash\" , \"params\" : [ \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" ,false ] , \"id\" :1 } RESPONSE \uf0c1 RESULT FIELDS BLOCK - A block object, or null when no block was found number : the block number. null when its pending block. hash : 32 Bytes - hash of the block. null when its pending block. parentHash : 32 Bytes - hash of the parent block. nonce : 8 Bytes - hash of the generated proof-of-work. null when its pending block. sha3Uncles : 32 Bytes - SHA3 of the uncles data in the block. logsBloom : 256 Bytes - the bloom filter for the logs of the block. null when its pending block. transactionsRoot : 32 Bytes - the root of the transaction trie of the block. stateRoot : 32 Bytes - the root of the final state trie of the block. receiptsRoot : 32 Bytes - the root of the receipts trie of the block. miner : 20 Bytes - the address of the beneficiary to whom the mining rewards were given. difficulty : integer of the difficulty for this block. totalDifficulty : integer of the total difficulty of the chain until this block. extraData : the \u201cextra data\u201d field of this block. size : integer the size of this block in bytes. gasLimit : the maximum gas allowed in this block. gasUsed : the total used gas by all transactions in this block. timestamp : the unix timestamp for when the block was collated. transactions : Array - Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter. uncles : an Array of uncle hashes. BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : { \"difficulty\" : \"0xbfabcdbd93dda\" , \"extraData\" : \"0x737061726b706f6f6c2d636e2d6e6f64652d3132\" , \"gasLimit\" : \"0x79f39e\" , \"gasUsed\" : \"0x79ccd3\" , \"hash\" : \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" , \"logsBloom\" : \"0x4848112002a2020aaa0812180045840210020005281600c80104264300080008000491220144461026015300100000128005018401002090a824a4150015410020140400d808440106689b29d0280b1005200007480ca950b15b010908814e01911000054202a020b05880b914642a0000300003010044044082075290283516be82504082003008c4d8d14462a8800c2990c88002a030140180036c220205201860402001014040180002006860810ec0a1100a14144148408118608200060461821802c081000042d0810104a8004510020211c088200420822a082040e10104c00d010064004c122692020c408a1aa2348020445403814002c800888208b1\" , \"miner\" : \"0x5a0b54d5dc17e0aadc383d2db43b0a0d3e029c4c\" , \"mixHash\" : \"0x3d1fdd16f15aeab72e7db1013b9f034ee33641d92f71c0736beab4e67d34c7a7\" , \"nonce\" : \"0x4db7a1c01d8a8072\" , \"number\" : \"0x5bad55\" , \"parentHash\" : \"0x61a8ad530a8a43e3583f8ec163f773ad370329b2375d66433eb82f005e1d6202\" , \"receiptsRoot\" : \"0x5eced534b3d84d3d732ddbc714f5fd51d98a941b28182b6efe6df3a0fe90004b\" , \"sha3Uncles\" : \"0x8a562e7634774d3e3a36698ac4915e37fc84a2cd0044cb84fa5d80263d2af4f6\" , \"size\" : \"0x41c7\" , \"stateRoot\" : \"0xf5208fffa2ba5a3f3a2f64ebd5ca3d098978bedd75f335f56b705d8715ee2305\" , \"timestamp\" : \"0x5b541449\" , \"totalDifficulty\" : \"0x12ac11391a2f3872fcd\" , \"transactions\" : [ \"0x8784d99762bccd03b2086eabccee0d77f14d05463281e121a62abfebcf0d2d5f\" , \"0x311be6a9b58748717ac0f70eb801d29973661aaf1365960d159e4ec4f4aa2d7f\" , \"0xe42b0256058b7cad8a14b136a0364acda0b4c36f5b02dea7e69bfd82cef252a2\" , \"0x4eb05376055c6456ed883fc843bc43df1dcf739c321ba431d518aecd7f98ca11\" , \"0x994dd9e72b212b7dc5fd0466ab75adf7d391cf4f206a65b7ad2a1fd032bb06d7\" , \"0xf6feecbb9ab0ac58591a4bc287059b1133089c499517e91a274e6a1f5e7dce53\" , \"0x7e537d687a5525259480440c6ea2e1a8469cd98906eaff8597f3d2a44422ff97\" , \"0xa762220e92bed6d77a2c19ffc60dad77d71bd5028c5230c896ab4b9552a39b50\" , \"0xf1fa677edda7e5add8e794732c7554cd5459a5c12781dc71de73c7937dfb2775\" ], \"transactionsRoot\" : \"0xf98631e290e88f58a46b7032f025969039aa9b5696498efc76baf436fa69b262\" , \"uncles\" : [ \"0x824cce7c7c2ec6874b9fa9a9a898eb5f27cbaf3991dfa81084c3af60d1db618c\" ] } }","title":"eth_getBlockByHash"},{"location":"api/get/eth_getBlockByHash/#eth_getblockbyhash","text":"","title":"eth_getBlockByHash"},{"location":"api/get/eth_getBlockByHash/#v1jsonrpcnetworketh_getblockbyhash","text":"Returns information about a block by hash.","title":"/v1/jsonrpc/:network/eth_getBlockByHash"},{"location":"api/get/eth_getBlockByHash/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getBlockByHash?params=:paramsJSONArray","title":"REQUEST"},{"location":"api/get/eth_getBlockByHash/#response","text":"","title":"RESPONSE"},{"location":"api/get/eth_getBlockByNumber/","text":"eth_getBlockByNumber \uf0c1 /v1/jsonrpc/:network/eth_getBlockByNumber \uf0c1 Returns information about a block by hash. REQUEST \uf0c1 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getBlockByNumber?params=:paramsJSONArray HEADERS Content-Type: application/json REQUEST PARAMS BLOCK PARAMETER [required] - an integer block number, or the string \u201clatest\u201d, \u201cearliest\u201d or \u201cpending\u201d, see the default block parameter SHOW TRANSACTION DETAILS FLAG [required] - if set to true, it returns the full transaction objects, if false only the hashes of the transactions. EXAMPLE // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getBlockByNumber --data-urlencode 'params=[\"0x5BAD55\",false]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockByNumber\",\"params\": [\"0x5BAD55\",false],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getBlockByNumber\" , \"params\" : [ \"0x5BAD55\" ,false ] , \"id\" :1 } RESPONSE \uf0c1 RESULT FIELDS BLOCK - A block object, or null when no block was found number : the block number. null when its pending block. hash : 32 Bytes - hash of the block. null when its pending block. parentHash : 32 Bytes - hash of the parent block. nonce : 8 Bytes - hash of the generated proof-of-work. null when its pending block. sha3Uncles : 32 Bytes - SHA3 of the uncles data in the block. logsBloom : 256 Bytes - the bloom filter for the logs of the block. null when its pending block. transactionsRoot : 32 Bytes - the root of the transaction trie of the block. stateRoot : 32 Bytes - the root of the final state trie of the block. receiptsRoot : 32 Bytes - the root of the receipts trie of the block. miner : 20 Bytes - the address of the beneficiary to whom the mining rewards were given. difficulty : integer of the difficulty for this block. totalDifficulty : integer of the total difficulty of the chain until this block. extraData : the \u201cextra data\u201d field of this block. size : integer the size of this block in bytes. gasLimit : the maximum gas allowed in this block. gasUsed : the total used gas by all transactions in this block. timestamp : the unix timestamp for when the block was collated. transactions : Array - Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter. uncles : an Array of uncle hashes. BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : { \"difficulty\" : \"0xbfabcdbd93dda\" , \"extraData\" : \"0x737061726b706f6f6c2d636e2d6e6f64652d3132\" , \"gasLimit\" : \"0x79f39e\" , \"gasUsed\" : \"0x79ccd3\" , \"hash\" : \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" , \"logsBloom\" : \"0x4848112002a2020aaa0812180045840210020005281600c80104264300080008000491220144461026015300100000128005018401002090a824a4150015410020140400d808440106689b29d0280b1005200007480ca950b15b010908814e01911000054202a020b05880b914642a0000300003010044044082075290283516be82504082003008c4d8d14462a8800c2990c88002a030140180036c220205201860402001014040180002006860810ec0a1100a14144148408118608200060461821802c081000042d0810104a8004510020211c088200420822a082040e10104c00d010064004c122692020c408a1aa2348020445403814002c800888208b1\" , \"miner\" : \"0x5a0b54d5dc17e0aadc383d2db43b0a0d3e029c4c\" , \"mixHash\" : \"0x3d1fdd16f15aeab72e7db1013b9f034ee33641d92f71c0736beab4e67d34c7a7\" , \"nonce\" : \"0x4db7a1c01d8a8072\" , \"number\" : \"0x5bad55\" , \"parentHash\" : \"0x61a8ad530a8a43e3583f8ec163f773ad370329b2375d66433eb82f005e1d6202\" , \"receiptsRoot\" : \"0x5eced534b3d84d3d732ddbc714f5fd51d98a941b28182b6efe6df3a0fe90004b\" , \"sha3Uncles\" : \"0x8a562e7634774d3e3a36698ac4915e37fc84a2cd0044cb84fa5d80263d2af4f6\" , \"size\" : \"0x41c7\" , \"stateRoot\" : \"0xf5208fffa2ba5a3f3a2f64ebd5ca3d098978bedd75f335f56b705d8715ee2305\" , \"timestamp\" : \"0x5b541449\" , \"totalDifficulty\" : \"0x12ac11391a2f3872fcd\" , \"transactions\" : [ \"0x8784d99762bccd03b2086eabccee0d77f14d05463281e121a62abfebcf0d2d5f\" , \"0x311be6a9b58748717ac0f70eb801d29973661aaf1365960d159e4ec4f4aa2d7f\" , \"0xe42b0256058b7cad8a14b136a0364acda0b4c36f5b02dea7e69bfd82cef252a2\" , \"0x4eb05376055c6456ed883fc843bc43df1dcf739c321ba431d518aecd7f98ca11\" , \"0x994dd9e72b212b7dc5fd0466ab75adf7d391cf4f206a65b7ad2a1fd032bb06d7\" , \"0xf6feecbb9ab0ac58591a4bc287059b1133089c499517e91a274e6a1f5e7dce53\" , \"0x7e537d687a5525259480440c6ea2e1a8469cd98906eaff8597f3d2a44422ff97\" , \"0xa762220e92bed6d77a2c19ffc60dad77d71bd5028c5230c896ab4b9552a39b50\" , \"0xf1fa677edda7e5add8e794732c7554cd5459a5c12781dc71de73c7937dfb2775\" ], \"transactionsRoot\" : \"0xf98631e290e88f58a46b7032f025969039aa9b5696498efc76baf436fa69b262\" , \"uncles\" : [ \"0x824cce7c7c2ec6874b9fa9a9a898eb5f27cbaf3991dfa81084c3af60d1db618c\" ] } }","title":"eth_getBlockByNumber"},{"location":"api/get/eth_getBlockByNumber/#eth_getblockbynumber","text":"","title":"eth_getBlockByNumber"},{"location":"api/get/eth_getBlockByNumber/#v1jsonrpcnetworketh_getblockbynumber","text":"Returns information about a block by hash.","title":"/v1/jsonrpc/:network/eth_getBlockByNumber"},{"location":"api/get/eth_getBlockByNumber/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getBlockByNumber?params=:paramsJSONArray","title":"REQUEST"},{"location":"api/get/eth_getBlockByNumber/#response","text":"","title":"RESPONSE"},{"location":"api/get/eth_getBlockTransactionCountByHash/","text":"eth_getBlockTransactionCountByHash \uf0c1 /v1/jsonrpc/:network/eth_getBlockTransactionCountByHash \uf0c1 Returns the number of transactions in a block from a block matching the given block hash. REQUEST \uf0c1 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getBlockTransactionCountByHash?params=:paramsJSONArray HEADERS Content-Type: application/json REQUEST PARAMS BLOCK HASH [required] - a string representing the hash (32 bytes) of a block EXAMPLE // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getBlockTransactionCountByHash --data-urlencode 'params=[\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockTransactionCountByHash\",\"params\": [\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getBlockTransactionCountByHash\" , \"params\" : [ \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" ] , \"id\" :1 } RESPONSE \uf0c1 RESULT FIELDS BLOCK TRANSACTION COUNT - a hex code of the integer representing the number of transactions in the provided block BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x50\" }","title":"eth_getBlockTransactionCountByHash"},{"location":"api/get/eth_getBlockTransactionCountByHash/#eth_getblocktransactioncountbyhash","text":"","title":"eth_getBlockTransactionCountByHash"},{"location":"api/get/eth_getBlockTransactionCountByHash/#v1jsonrpcnetworketh_getblocktransactioncountbyhash","text":"Returns the number of transactions in a block from a block matching the given block hash.","title":"/v1/jsonrpc/:network/eth_getBlockTransactionCountByHash"},{"location":"api/get/eth_getBlockTransactionCountByHash/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getBlockTransactionCountByHash?params=:paramsJSONArray","title":"REQUEST"},{"location":"api/get/eth_getBlockTransactionCountByHash/#response","text":"","title":"RESPONSE"},{"location":"api/get/eth_getBlockTransactionCountByNumber/","text":"eth_getBlockTransactionCountByNumber \uf0c1 /v1/jsonrpc/:network/eth_getBlockTransactionCountByNumber \uf0c1 Returns the number of transactions in a block matching the given block number. REQUEST \uf0c1 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getBlockTransactionCountByNumber?params=:paramsJSONArray HEADERS Content-Type: application/json REQUEST PARAMS BLOCK PARAMETER [required] - an integer block number, or the string \u201clatest\u201d, \u201cearliest\u201d or \u201cpending\u201d, see the default block parameter EXAMPLE // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getBlockTransactionCountByNumber --data-urlencode 'params=[\"latest\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockTransactionCountByNumber\",\"params\": [\"latest\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getBlockTransactionCountByNumber\" , \"params\" : [ \"latest\" ] , \"id\" :1 } RESPONSE \uf0c1 RESULT FIELDS BLOCK TRANSACTION COUNT - a hex code of the integer representing the number of transactions in the provided block BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x57\" }","title":"eth_getBlockTransactionCountByNumber"},{"location":"api/get/eth_getBlockTransactionCountByNumber/#eth_getblocktransactioncountbynumber","text":"","title":"eth_getBlockTransactionCountByNumber"},{"location":"api/get/eth_getBlockTransactionCountByNumber/#v1jsonrpcnetworketh_getblocktransactioncountbynumber","text":"Returns the number of transactions in a block matching the given block number.","title":"/v1/jsonrpc/:network/eth_getBlockTransactionCountByNumber"},{"location":"api/get/eth_getBlockTransactionCountByNumber/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getBlockTransactionCountByNumber?params=:paramsJSONArray","title":"REQUEST"},{"location":"api/get/eth_getBlockTransactionCountByNumber/#response","text":"","title":"RESPONSE"},{"location":"api/get/eth_getCode/","text":"eth_getCode \uf0c1 /v1/jsonrpc/:network/eth_getCode \uf0c1 Returns code at a given address. REQUEST \uf0c1 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getCode?params=:paramsJSONArray HEADERS Content-Type: application/json REQUEST PARAMS ADDRESS [required] - a string representing the address (20 bytes) of the code BLOCK PARAMETER [required] - an integer block number, or the string \u201clatest\u201d, \u201cearliest\u201d or \u201cpending\u201d, see the default block parameter EXAMPLE // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getCode --data-urlencode 'params=[\"0x06012c8cf97bead5deae237070f9587f8e7a266d\",\"latest\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getCode\",\"params\": [\"0x06012c8cf97bead5deae237070f9587f8e7a266d\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getCode\" , \"params\" : [ \"0x06012c8cf97bead5deae237070f9587f8e7a266d\" ] , \"id\" :1 } RESPONSE \uf0c1 RESULT FIELDS CODE - a hex of the code at the given address BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x606060............\" }","title":"eth_getCode"},{"location":"api/get/eth_getCode/#eth_getcode","text":"","title":"eth_getCode"},{"location":"api/get/eth_getCode/#v1jsonrpcnetworketh_getcode","text":"Returns code at a given address.","title":"/v1/jsonrpc/:network/eth_getCode"},{"location":"api/get/eth_getCode/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getCode?params=:paramsJSONArray","title":"REQUEST"},{"location":"api/get/eth_getCode/#response","text":"","title":"RESPONSE"},{"location":"api/get/eth_getLogs/","text":"eth_getLogs \uf0c1 /v1/jsonrpc/:network/eth_getLogs \uf0c1 Returns an array of all logs matching a given filter object. REQUEST \uf0c1 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getLogs?params=:paramsJSONArray HEADERS Content-Type: application/json REQUEST PARAMS FILTER OBJECT address [optional] - a string representing the address (20 bytes) to check for balance fromBlock [optional, default is \u201clatest\u201d] - an integer block number, or the string \u201clatest\u201d, \u201cearliest\u201d or \u201cpending\u201d toBlock [optional, default is \u201clatest\u201d] - an integer block number, or the string \u201clatest\u201d, \u201cearliest\u201d or \u201cpending\u201d topics [optional] - Array of 32 Bytes DATA topics. Topics are order-dependent. blockhash : [optional, **_future **]_ With the addition of EIP-234, blockHash will be a new filter option which restricts the logs returned to the single block with the 32-byte hash blockHash . Using blockHash is equivalent to fromBlock = toBlock = the block number with hash blockHash . If blockHash is present in in the filter criteria, then neither fromBlock nor toBlock are allowed. EXAMPLE // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getLogs --data-urlencode 'params=[{\"topics\":[\"0x241ea03ca20251805084d27d4440371c34a0b85ff108f6bb5611248f73818b80\"]}]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getLogs\",\"params\":[{\"topics\":[\"0x241ea03ca20251805084d27d4440371c34a0b85ff108f6bb5611248f73818b80\"]}],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getLogs\" , \"params\" : [ \"0x241ea03ca20251805084d27d4440371c34a0b85ff108f6bb5611248f73818b80\" ] , \"id\" :1 } RESPONSE \uf0c1 RESULT FIELDS LOG OBJECTS - An array of log objects, or an empty array if nothing has changed since last poll. For filters created with eth_newBlockFilter the return are block hashes of 32 Bytes), e.g. [\u201c0x3454645634534\u2026\u201d] For filters created with eth_newPendingTransactionFilter the return are transaction hashes of 32 Bytes), e.g. [\u201c0x6345343454645\u2026\u201d]. For filters created with eth_newFilter logs are objects with following params: removed : true when the log was removed, due to a chain reorganization. false if its a valid log. logIndex : integer of the log index position in the block. null when its pending log. transactionIndex : integer of the transactions index position log was created from. null when its pending log. transactionHash : 32 Bytes - hash of the transactions this log was created from. null when its pending log. blockHash : 32 Bytes - hash of the block where this log was in. null when its pending. null when its pending log. blockNumber : the block number where this log was in. null when its pending. null when its pending log. address : 20 Bytes - address from which this log originated. data : contains one or more 32 Bytes non-indexed arguments of the log. topics : Array of 0 to 4 32 Bytes of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256)), except you declared the event with the anonymous specifier.) BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : [ { \"address\" : \"0x1a94fce7ef36bc90959e206ba569a12afbc91ca1\" , \"topics\" : [ \"0x241ea03ca20251805084d27d4440371c34a0b85ff108f6bb5611248f73818b80\" ], \"data\" : \"0x0000000000000000000000003e3310720058c51f0de456e273c626cdd35065700000000000000000000000000000000000000000000000000000000000003185000000000000000000000000000000000000000000000000000000000000318200000000000000000000000000000000000000000000000000000000005c2a23\" , \"blockNumber\" : \"0x5c29fb\" , \"transactionHash\" : \"0x3dc91b98249fa9f2c5c37486a2427a3a7825be240c1c84961dfb3063d9c04d50\" , \"transactionIndex\" : \"0x1d\" , \"blockHash\" : \"0x7c5a35e9cb3e8ae0e221ab470abae9d446c3a5626ce6689fc777dcffcab52c70\" , \"logIndex\" : \"0x1d\" , \"removed\" : false }, { \"address\" : \"0x06012c8cf97bead5deae237070f9587f8e7a266d\" , \"topics\" : [ \"0x241ea03ca20251805084d27d4440371c34a0b85ff108f6bb5611248f73818b80\" ], \"data\" : \"0x00000000000000000000000077ea137625739598666ded665953d26b3d8e374400000000000000000000000000000000000000000000000000000000000749ff00000000000000000000000000000000000000000000000000000000000a749d00000000000000000000000000000000000000000000000000000000005c2a0f\" , \"blockNumber\" : \"0x5c29fb\" , \"transactionHash\" : \"0x788b1442414cb9c9a36dba2abe250763161a6f6395788a2e808f1b34e92beec1\" , \"transactionIndex\" : \"0x54\" , \"blockHash\" : \"0x7c5a35e9cb3e8ae0e221ab470abae9d446c3a5626ce6689fc777dcffcab52c70\" , \"logIndex\" : \"0x57\" , \"removed\" : false } ] }","title":"eth_getLogs"},{"location":"api/get/eth_getLogs/#eth_getlogs","text":"","title":"eth_getLogs"},{"location":"api/get/eth_getLogs/#v1jsonrpcnetworketh_getlogs","text":"Returns an array of all logs matching a given filter object.","title":"/v1/jsonrpc/:network/eth_getLogs"},{"location":"api/get/eth_getLogs/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getLogs?params=:paramsJSONArray","title":"REQUEST"},{"location":"api/get/eth_getLogs/#response","text":"","title":"RESPONSE"},{"location":"api/get/eth_getStorageAt/","text":"eth_getStorageAt \uf0c1 /v1/jsonrpc/:network/eth_getStorageAt \uf0c1 Returns the value from a storage position at a given address. REQUEST \uf0c1 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getStorageAt?params=:paramsJSONArray HEADERS Content-Type: application/json REQUEST PARAMS ADDRESS [required] - a string representing the address (20 bytes) of the storage STORAGE POSITION [required] - a hex code of the position in the storage BLOCK PARAMETER [required] - an integer block number, or the string \u201clatest\u201d, \u201cearliest\u201d or \u201cpending\u201d, see the default block parameter EXAMPLE // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getStorageAt --data-urlencode 'params=[\"0x295a70b2de5e3953354a6a8344e616ed314d7251\", \"0x6661e9d6d8b923d5bbaab1b96e1dd51ff6ea2a93520fdc9eb75d059238b8c5e9\", \"latest\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getStorageAt\",\"params\": [\"0x295a70b2de5e3953354a6a8344e616ed314d7251\", \"0x6661e9d6d8b923d5bbaab1b96e1dd51ff6ea2a93520fdc9eb75d059238b8c5e9\", \"latest\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getStorageAt\" , \"params\" : [ \"0x295a70b2de5e3953354a6a8344e616ed314d7251\" , \"0x6661e9d6d8b923d5bbaab1b96e1dd51ff6ea2a93520fdc9eb75d059238b8c5e9\" , \"latest\" ] , \"id\" :1 } RESPONSE \uf0c1 RESULT FIELDS STORAGE VALUE - a hex code of the integer indicating the value of the storage position at the provided address BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x000000000000000000000000000000000000000000000000000000000000162e\" } Calculating the correct position depends on the storage to retrieve. Consider the following contract deployed at 0x295a70b2de5e3953354a6a8344e616ed314d7251 by address 0x391694e7e0b0cce554cb130d723a9d27458f9298 , contract Storage { uint pos0; mapping(address => uint) pos1; function Storage() { pos0 = 1234; pos1[msg.sender] = 5678; } } Retrieving the value of pos0 is straight forward: curl -X POST --data '{\"jsonrpc\":\"2.0\", \"method\": \"eth_getStorageAt\", \"params\": [\"0x295a70b2de5e3953354a6a8344e616ed314d7251\", \"0x0\", \"latest\"], \"id\": 1}' localhost:8545 { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x00000000000000000000000000000000000000000000000000000000000004d2\" } Retrieving an element of the map is harder. The position of an element in the map is calculated with: keccak ( LeftPad32 ( key , 0 ), LeftPad32 ( map position , 0 )) This means to retrieve the storage on pos1[\"0x391694e7e0b0cce554cb130d723a9d27458f9298\"] we need to calculate the position with: keccak ( decodeHex ( '000000000000000000000000391694e7e0b0cce554cb130d723a9d27458f9298' + '0000000000000000000000000000000000000000000000000000000000000001' ) ); The geth console which comes with the web3 library can be used to make the calculation: > var key = \"000000000000000000000000391694e7e0b0cce554cb130d723a9d27458f9298\" + \"0000000000000000000000000000000000000000000000000000000000000001\" undefined > web3 . sha3 ( key , { \"encoding\" : \"hex\" }) \"0x6661e9d6d8b923d5bbaab1b96e1dd51ff6ea2a93520fdc9eb75d059238b8c5e9\" Now to fetch the storage: curl -X POST --data '{\"jsonrpc\":\"2.0\", \"method\": \"eth_getStorageAt\", \"params\": [\"0x295a70b2de5e3953354a6a8344e616ed314d7251\", \"0x6661e9d6d8b923d5bbaab1b96e1dd51ff6ea2a93520fdc9eb75d059238b8c5e9\", \"latest\"], \"id\": 1}' localhost:8545 { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x000000000000000000000000000000000000000000000000000000000000162e\" }","title":"eth_getStorageAt"},{"location":"api/get/eth_getStorageAt/#eth_getstorageat","text":"","title":"eth_getStorageAt"},{"location":"api/get/eth_getStorageAt/#v1jsonrpcnetworketh_getstorageat","text":"Returns the value from a storage position at a given address.","title":"/v1/jsonrpc/:network/eth_getStorageAt"},{"location":"api/get/eth_getStorageAt/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getStorageAt?params=:paramsJSONArray","title":"REQUEST"},{"location":"api/get/eth_getStorageAt/#response","text":"","title":"RESPONSE"},{"location":"api/get/eth_getTransactionByBlockHashAndIndex/","text":"eth_getTransactionByBlockHashAndIndex \uf0c1 /v1/jsonrpc/:network/eth_getTransactionByBlockHashAndIndex \uf0c1 Returns information about a transaction by block hash and transaction index position. REQUEST \uf0c1 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getTransactionByBlockHashAndIndex?params=:paramsJSONArray HEADERS Content-Type: application/json REQUEST PARAMS BLOCK HASH [required] - a string representing the hash (32 bytes) of a block TRANSACTION INDEX POSITION [required] - a hex of the integer representing the position in the block EXAMPLE // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getTransactionByBlockHashAndIndex --data-urlencode 'params=[\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\",\"0x0\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionByBlockHashAndIndex\",\"params\": [\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\",\"0x0\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getTransactionByBlockHashAndIndex\" , \"params\" : [ \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" , \"0x0\" ] , \"id\" :1 } RESPONSE \uf0c1 RESULT FIELDS TRANSACTION - A transaction object, or null when no transaction was found hash : 32 Bytes - hash of the transaction. nonce : the number of transactions made by the sender prior to this one. blockHash : 32 Bytes - hash of the block where this transaction was in. null when its pending. blockNumber : block number where this transaction was in. null when its pending. transactionIndex : integer of the transactions index position in the block. null when its pending. from : 20 Bytes - address of the sender. to : 20 Bytes - address of the receiver. null when its a contract creation transaction. value : value transferred in Wei. gasPrice : gas price provided by the sender in Wei. gas : gas provided by the sender. input : the data send along with the transaction. BODY { jsonrpc : \"2.0\" , id : 1 , result : { blockHash : \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" , blockNumber : \"0x5bad55\" , from : \"0x398137383b3d25c92898c656696e41950e47316b\" , gas : \"0x1d45e\" , gasPrice : \"0xfa56ea00\" , hash : \"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\" , input : \"0xf7d8c88300000000000000000000000000000000000000000000000000000000000cee6100000000000000000000000000000000000000000000000000000000000ac3e1\" , nonce : \"0x18\" , to : \"0x06012c8cf97bead5deae237070f9587f8e7a266d\" , transactionIndex : \"0x11\" , value : \"0x1c6bf526340000\" , v : \"0x25\" , r : \"0x2a378831cf81d99a3f06a18ae1b6ca366817ab4d88a70053c41d7a8f0368e031\" , s : \"0x450d831a05b6e418724436c05c155e0a1b7b921015d0fbc2f667aed709ac4fb5\" } }","title":"eth_getTransactionByBlockHashAndIndex"},{"location":"api/get/eth_getTransactionByBlockHashAndIndex/#eth_gettransactionbyblockhashandindex","text":"","title":"eth_getTransactionByBlockHashAndIndex"},{"location":"api/get/eth_getTransactionByBlockHashAndIndex/#v1jsonrpcnetworketh_gettransactionbyblockhashandindex","text":"Returns information about a transaction by block hash and transaction index position.","title":"/v1/jsonrpc/:network/eth_getTransactionByBlockHashAndIndex"},{"location":"api/get/eth_getTransactionByBlockHashAndIndex/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getTransactionByBlockHashAndIndex?params=:paramsJSONArray","title":"REQUEST"},{"location":"api/get/eth_getTransactionByBlockHashAndIndex/#response","text":"","title":"RESPONSE"},{"location":"api/get/eth_getTransactionByBlockNumberAndIndex/","text":"eth_getTransactionByBlockNumberAndIndex \uf0c1 /v1/jsonrpc/:network/eth_getTransactionByBlockNumberAndIndex \uf0c1 Returns information about a transaction by block number and transaction index position. REQUEST \uf0c1 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getTransactionByBlockNumberAndIndex?params=:paramsJSONArray HEADERS Content-Type: application/json REQUEST PARAMS BLOCK PARAMETER [required] - an integer block number, or the string \u201clatest\u201d, \u201cearliest\u201d or \u201cpending\u201d, see the default block parameter TRANSACTION INDEX POSITION [required] - a hex of the integer representing the position in the block EXAMPLE // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getTransactionByBlockNumberAndIndex --data-urlencode 'params=[\"0x5BAD55\",\"0x0\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionByBlockNumberAndIndex\",\"params\": [\"0x5BAD55\",\"0x0\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getTransactionByBlockNumberAndIndex\" , \"params\" : [ \"0x5BAD55\" , \"0x0\" ] , \"id\" :1 } RESPONSE \uf0c1 RESULT FIELDS TRANSACTION - A transaction object, or null when no transaction was found hash : 32 Bytes - hash of the transaction. nonce : the number of transactions made by the sender prior to this one. blockHash : 32 Bytes - hash of the block where this transaction was in. null when its pending. blockNumber : block number where this transaction was in. null when its pending. transactionIndex : integer of the transactions index position in the block. null when its pending. from : 20 Bytes - address of the sender. to : 20 Bytes - address of the receiver. null when its a contract creation transaction. value : value transferred in Wei. gasPrice : gas price provided by the sender in Wei. gas : gas provided by the sender. input : the data send along with the transaction. BODY { jsonrpc : \"2.0\" , id : 1 , result : { blockHash : \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" , blockNumber : \"0x5bad55\" , from : \"0x398137383b3d25c92898c656696e41950e47316b\" , gas : \"0x1d45e\" , gasPrice : \"0xfa56ea00\" , hash : \"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\" , input : \"0xf7d8c88300000000000000000000000000000000000000000000000000000000000cee6100000000000000000000000000000000000000000000000000000000000ac3e1\" , nonce : \"0x18\" , to : \"0x06012c8cf97bead5deae237070f9587f8e7a266d\" , transactionIndex : \"0x11\" , value : \"0x1c6bf526340000\" , v : \"0x25\" , r : \"0x2a378831cf81d99a3f06a18ae1b6ca366817ab4d88a70053c41d7a8f0368e031\" , s : \"0x450d831a05b6e418724436c05c155e0a1b7b921015d0fbc2f667aed709ac4fb5\" } }","title":"eth_getTransactionByBlockNumberAndIndex"},{"location":"api/get/eth_getTransactionByBlockNumberAndIndex/#eth_gettransactionbyblocknumberandindex","text":"","title":"eth_getTransactionByBlockNumberAndIndex"},{"location":"api/get/eth_getTransactionByBlockNumberAndIndex/#v1jsonrpcnetworketh_gettransactionbyblocknumberandindex","text":"Returns information about a transaction by block number and transaction index position.","title":"/v1/jsonrpc/:network/eth_getTransactionByBlockNumberAndIndex"},{"location":"api/get/eth_getTransactionByBlockNumberAndIndex/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getTransactionByBlockNumberAndIndex?params=:paramsJSONArray","title":"REQUEST"},{"location":"api/get/eth_getTransactionByBlockNumberAndIndex/#response","text":"","title":"RESPONSE"},{"location":"api/get/eth_getTransactionByHash/","text":"eth_getTransactionByHash \uf0c1 /v1/jsonrpc/:network/eth_getTransactionByHash \uf0c1 Returns information about a transaction for a given hash. REQUEST \uf0c1 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getTransactionByHash?params=:paramsJSONArray HEADERS Content-Type: application/json REQUEST PARAMS TRANSACTION HASH [required] - a string representing the hash (32 bytes) of a transaction EXAMPLE // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getTransactionByHash --data-urlencode 'params=[\"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionByHash\",\"params\": [\"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getTransactionByHash\" , \"params\" : [ \"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\" ] , \"id\" :1 } RESPONSE \uf0c1 RESULT FIELDS TRANSACTION - A transaction object, or null when no transaction was found hash : 32 Bytes - hash of the transaction. nonce : the number of transactions made by the sender prior to this one. blockHash : 32 Bytes - hash of the block where this transaction was in. null when its pending. blockNumber : block number where this transaction was in. null when its pending. transactionIndex : integer of the transactions index position in the block. null when its pending. from : 20 Bytes - address of the sender. to : 20 Bytes - address of the receiver. null when its a contract creation transaction. value : value transferred in Wei. gasPrice : gas price provided by the sender in Wei. gas : gas provided by the sender. input : the data send along with the transaction. BODY { jsonrpc : \"2.0\" , id : 1 , result : { blockHash : \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" , blockNumber : \"0x5bad55\" , from : \"0x398137383b3d25c92898c656696e41950e47316b\" , gas : \"0x1d45e\" , gasPrice : \"0xfa56ea00\" , hash : \"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\" , input : \"0xf7d8c88300000000000000000000000000000000000000000000000000000000000cee6100000000000000000000000000000000000000000000000000000000000ac3e1\" , nonce : \"0x18\" , to : \"0x06012c8cf97bead5deae237070f9587f8e7a266d\" , transactionIndex : \"0x11\" , value : \"0x1c6bf526340000\" , v : \"0x25\" , r : \"0x2a378831cf81d99a3f06a18ae1b6ca366817ab4d88a70053c41d7a8f0368e031\" , s : \"0x450d831a05b6e418724436c05c155e0a1b7b921015d0fbc2f667aed709ac4fb5\" } }","title":"eth_getTransactionByHash"},{"location":"api/get/eth_getTransactionByHash/#eth_gettransactionbyhash","text":"","title":"eth_getTransactionByHash"},{"location":"api/get/eth_getTransactionByHash/#v1jsonrpcnetworketh_gettransactionbyhash","text":"Returns information about a transaction for a given hash.","title":"/v1/jsonrpc/:network/eth_getTransactionByHash"},{"location":"api/get/eth_getTransactionByHash/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getTransactionByHash?params=:paramsJSONArray","title":"REQUEST"},{"location":"api/get/eth_getTransactionByHash/#response","text":"","title":"RESPONSE"},{"location":"api/get/eth_getTransactionCount/","text":"eth_getTransactionCount \uf0c1 /v1/jsonrpc/:network/eth_getTransactionCount \uf0c1 Returns the number of transactions sent from an address. REQUEST \uf0c1 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getTransactionCount?params=:paramsJSONArray HEADERS Content-Type: application/json REQUEST PARAMS ADDRESS [required] - a string representing the address (20 bytes) to check for transaction count for BLOCK PARAMETER [required] - an integer block number, or the string \u201clatest\u201d, \u201cearliest\u201d or \u201cpending\u201d, see the default block parameter EXAMPLE // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getTransactionCount --data-urlencode 'params=[\"0xc94770007dda54cF92009BFF0dE90c06F603a09f\",\"latest\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionCount\",\"params\": [\"0xc94770007dda54cF92009BFF0dE90c06F603a09f\",\"latest\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getTransactionCount\" , \"params\" : [ \"0xc94770007dda54cF92009BFF0dE90c06F603a09f\" , \"latest\" ] , \"id\" :1 } RESPONSE \uf0c1 RESULT FIELDS TRANSACTION COUNT - a hex code of the integer representing the number of transactions sent from this address. BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x1a\" }","title":"eth_getTransactionCount"},{"location":"api/get/eth_getTransactionCount/#eth_gettransactioncount","text":"","title":"eth_getTransactionCount"},{"location":"api/get/eth_getTransactionCount/#v1jsonrpcnetworketh_gettransactioncount","text":"Returns the number of transactions sent from an address.","title":"/v1/jsonrpc/:network/eth_getTransactionCount"},{"location":"api/get/eth_getTransactionCount/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getTransactionCount?params=:paramsJSONArray","title":"REQUEST"},{"location":"api/get/eth_getTransactionCount/#response","text":"","title":"RESPONSE"},{"location":"api/get/eth_getTransactionReceipt/","text":"eth_getTransactionReceipt \uf0c1 /v1/jsonrpc/:network/eth_getTransactionReceipt \uf0c1 Returns the receipt of a transaction by transaction hash. Note that the receipt is not available for pending transactions. REQUEST \uf0c1 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getTransactionReceipt?params=:paramsJSONArray HEADERS Content-Type: application/json REQUEST PARAMS TRANSACTION HASH [required] - a string representing the hash (32 bytes) of a transaction EXAMPLE // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getTransactionReceipt --data-urlencode 'params=[\"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionReceipt\",\"params\": [\"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getTransactionReceipt\" , \"params\" : [ \"0xbb3a336e3f823ec18197f1e13ee875700f08f03e2cab75f0d0b118dabb44cba0\" ] , \"id\" :1 } RESPONSE \uf0c1 RESULT FIELDS TRANSACTION RECEIPT - A transaction receipt object, or null when no receipt was found: transactionHash : 32 Bytes - hash of the transaction. transactionIndex : integer of the transactions index position in the block. blockHash : 32 Bytes - hash of the block where this transaction was in. blockNumber : block number where this transaction was in. from : 20 Bytes - address of the sender. to : 20 Bytes - address of the receiver. null when its a contract creation transaction. cumulativeGasUsed : the total amount of gas used when this transaction was executed in the block. gasUsed : the amount of gas used by this specific transaction alone. contractAddress : 20 Bytes - the contract address created, if the transaction was a contract creation, otherwise - null. logs : Array - Array of log objects, which this transaction generated. logsBloom : 256 Bytes - Bloom filter for light clients to quickly retrieve related logs. It also returns either : - root : 32 bytes of post-transaction stateroot (pre Byzantium) - status : either 1 (success) or 0 (failure) BODY { \"id\" : 1 , \"jsonrpc\" : \"2.0\" , \"result\" : { transactionHash : '0xb903239f8543d04b5dc1ba6579132b143087c68db1b2168786408fcbce568238' , transactionIndex : '0x1' , // 1 blockNumber : '0xb' , // 11 blockHash : '0xc6ef2fc5426d6ad6fd9e2a26abeab0aa2411b7ab17f30a99d3cb96aed1d1055b' , cumulativeGasUsed : '0x33bc' , // 13244 gasUsed : '0x4dc' , // 1244 contractAddress : '0xb60e8dd61c5d32be8058bb8eb970870f07233155' , // or null, if none was created logs : [{ // logs as returned by getFilterLogs, etc. }, ...], logsBloom : \"0x00...0\" , // 256 byte bloom filter status : '0x1' } }","title":"eth_getTransactionReceipt"},{"location":"api/get/eth_getTransactionReceipt/#eth_gettransactionreceipt","text":"","title":"eth_getTransactionReceipt"},{"location":"api/get/eth_getTransactionReceipt/#v1jsonrpcnetworketh_gettransactionreceipt","text":"Returns the receipt of a transaction by transaction hash. Note that the receipt is not available for pending transactions.","title":"/v1/jsonrpc/:network/eth_getTransactionReceipt"},{"location":"api/get/eth_getTransactionReceipt/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getTransactionReceipt?params=:paramsJSONArray","title":"REQUEST"},{"location":"api/get/eth_getTransactionReceipt/#response","text":"","title":"RESPONSE"},{"location":"api/get/eth_getUncleByBlockHashAndIndex/","text":"eth_getUncleByBlockHashAndIndex \uf0c1 /v1/jsonrpc/:network/eth_getUncleByBlockHashAndIndex \uf0c1 Returns information about the \u2018Uncle\u2019 of a block by hash and the Uncle index position. REQUEST \uf0c1 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getUncleByBlockHashAndIndex?params=:paramsJSONArray HEADERS Content-Type: application/json REQUEST PARAMS BLOCK HASH [required] - a string representing the hash (32 bytes) of a block UNCLE INDEX POSITION [required] - a hex of the integer indicating the uncle\u2019s index position. EXAMPLE // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getUncleByBlockHashAndIndex --data-urlencode 'params=[\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\",\"0x0\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleByBlockHashAndIndex\",\"params\": [\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\",\"0x0\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getTransactionCount\" , \"params\" : [ \"0xc94770007dda54cF92009BFF0dE90c06F603a09f\" , \"latest\" ] , \"id\" :1 } RESPONSE \uf0c1 RESULT FIELDS BLOCK - A block object, or null when no block was found number : the block number. null when its pending block. hash : 32 Bytes - hash of the block. null when its pending block. parentHash : 32 Bytes - hash of the parent block. nonce : 8 Bytes - hash of the generated proof-of-work. null when its pending block. sha3Uncles : 32 Bytes - SHA3 of the uncles data in the block. logsBloom : 256 Bytes - the bloom filter for the logs of the block. null when its pending block. transactionsRoot : 32 Bytes - the root of the transaction trie of the block. stateRoot : 32 Bytes - the root of the final state trie of the block. receiptsRoot : 32 Bytes - the root of the receipts trie of the block. miner : 20 Bytes - the address of the beneficiary to whom the mining rewards were given. difficulty : integer of the difficulty for this block. totalDifficulty : integer of the total difficulty of the chain until this block. extraData : the \u201cextra data\u201d field of this block. size : integer the size of this block in bytes. gasLimit : the maximum gas allowed in this block. gasUsed : the total used gas by all transactions in this block. timestamp : the unix timestamp for when the block was collated. uncles : an Array of uncle hashes. Note: An uncle doesn\u2019t contain individual transactions. BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : { \"difficulty\" : \"0xbfabcdbd93dda\" , \"extraData\" : \"0x737061726b706f6f6c2d636e2d6e6f64652d3132\" , \"gasLimit\" : \"0x79f39e\" , \"gasUsed\" : \"0x79ccd3\" , \"hash\" : \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" , \"logsBloom\" : \"0x4848112002a2020aaa0812180045840210020005281600c80104264300080008000491220144461026015300100000128005018401002090a824a4150015410020140400d808440106689b29d0280b1005200007480ca950b15b010908814e01911000054202a020b05880b914642a0000300003010044044082075290283516be82504082003008c4d8d14462a8800c2990c88002a030140180036c220205201860402001014040180002006860810ec0a1100a14144148408118608200060461821802c081000042d0810104a8004510020211c088200420822a082040e10104c00d010064004c122692020c408a1aa2348020445403814002c800888208b1\" , \"miner\" : \"0x5a0b54d5dc17e0aadc383d2db43b0a0d3e029c4c\" , \"mixHash\" : \"0x3d1fdd16f15aeab72e7db1013b9f034ee33641d92f71c0736beab4e67d34c7a7\" , \"nonce\" : \"0x4db7a1c01d8a8072\" , \"number\" : \"0x5bad55\" , \"parentHash\" : \"0x61a8ad530a8a43e3583f8ec163f773ad370329b2375d66433eb82f005e1d6202\" , \"receiptsRoot\" : \"0x5eced534b3d84d3d732ddbc714f5fd51d98a941b28182b6efe6df3a0fe90004b\" , \"sha3Uncles\" : \"0x8a562e7634774d3e3a36698ac4915e37fc84a2cd0044cb84fa5d80263d2af4f6\" , \"size\" : \"0x41c7\" , \"stateRoot\" : \"0xf5208fffa2ba5a3f3a2f64ebd5ca3d098978bedd75f335f56b705d8715ee2305\" , \"timestamp\" : \"0x5b541449\" , \"totalDifficulty\" : \"0x12ac11391a2f3872fcd\" , \"transactionsRoot\" : \"0xf98631e290e88f58a46b7032f025969039aa9b5696498efc76baf436fa69b262\" , \"uncles\" : [] } }","title":"eth_getUncleByBlockHashAndIndex"},{"location":"api/get/eth_getUncleByBlockHashAndIndex/#eth_getunclebyblockhashandindex","text":"","title":"eth_getUncleByBlockHashAndIndex"},{"location":"api/get/eth_getUncleByBlockHashAndIndex/#v1jsonrpcnetworketh_getunclebyblockhashandindex","text":"Returns information about the \u2018Uncle\u2019 of a block by hash and the Uncle index position.","title":"/v1/jsonrpc/:network/eth_getUncleByBlockHashAndIndex"},{"location":"api/get/eth_getUncleByBlockHashAndIndex/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getUncleByBlockHashAndIndex?params=:paramsJSONArray","title":"REQUEST"},{"location":"api/get/eth_getUncleByBlockHashAndIndex/#response","text":"","title":"RESPONSE"},{"location":"api/get/eth_getUncleByBlockNumberAndIndex/","text":"eth_getUncleByBlockNumberAndIndex \uf0c1 /v1/jsonrpc/:network/eth_getUncleByBlockNumberAndIndex \uf0c1 Returns information about the \u2018Uncle\u2019 of a block by hash and the Uncle index position. REQUEST \uf0c1 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getUncleByBlockNumberAndIndex?params=:paramsJSONArray HEADERS Content-Type: application/json REQUEST PARAMS BLOCK PARAMETER [required] - an integer block number, or the string \u201clatest\u201d, \u201cearliest\u201d or \u201cpending\u201d, see the default block parameter UNCLE INDEX POSITION [required] - a hex of the integer indicating the uncle\u2019s index position. EXAMPLE // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getUncleByBlockNumberAndIndex --data-urlencode 'params=[\"0x29c\",\"0x0\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleByBlockNumberAndIndex\",\"params\": [\"0x29c\",\"0x0\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getUncleByBlockNumberAndIndex\" , \"params\" : [ \"0x29c\" , \"0x0\" ] , \"id\" :1 } RESPONSE \uf0c1 RESULT FIELDS BLOCK - A block object, or null when no block was found number : the block number. null when its pending block. hash : 32 Bytes - hash of the block. null when its pending block. parentHash : 32 Bytes - hash of the parent block. nonce : 8 Bytes - hash of the generated proof-of-work. null when its pending block. sha3Uncles : 32 Bytes - SHA3 of the uncles data in the block. logsBloom : 256 Bytes - the bloom filter for the logs of the block. null when its pending block. transactionsRoot : 32 Bytes - the root of the transaction trie of the block. stateRoot : 32 Bytes - the root of the final state trie of the block. receiptsRoot : 32 Bytes - the root of the receipts trie of the block. miner : 20 Bytes - the address of the beneficiary to whom the mining rewards were given. difficulty : integer of the difficulty for this block. totalDifficulty : integer of the total difficulty of the chain until this block. extraData : the \u201cextra data\u201d field of this block. size : integer the size of this block in bytes. gasLimit : the maximum gas allowed in this block. gasUsed : the total used gas by all transactions in this block. timestamp : the unix timestamp for when the block was collated. uncles : an Array of uncle hashes. Note: An uncle doesn\u2019t contain individual transactions. BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : { \"difficulty\" : \"0xbfabcdbd93dda\" , \"extraData\" : \"0x737061726b706f6f6c2d636e2d6e6f64652d3132\" , \"gasLimit\" : \"0x79f39e\" , \"gasUsed\" : \"0x79ccd3\" , \"hash\" : \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" , \"logsBloom\" : \"0x4848112002a2020aaa0812180045840210020005281600c80104264300080008000491220144461026015300100000128005018401002090a824a4150015410020140400d808440106689b29d0280b1005200007480ca950b15b010908814e01911000054202a020b05880b914642a0000300003010044044082075290283516be82504082003008c4d8d14462a8800c2990c88002a030140180036c220205201860402001014040180002006860810ec0a1100a14144148408118608200060461821802c081000042d0810104a8004510020211c088200420822a082040e10104c00d010064004c122692020c408a1aa2348020445403814002c800888208b1\" , \"miner\" : \"0x5a0b54d5dc17e0aadc383d2db43b0a0d3e029c4c\" , \"mixHash\" : \"0x3d1fdd16f15aeab72e7db1013b9f034ee33641d92f71c0736beab4e67d34c7a7\" , \"nonce\" : \"0x4db7a1c01d8a8072\" , \"number\" : \"0x5bad55\" , \"parentHash\" : \"0x61a8ad530a8a43e3583f8ec163f773ad370329b2375d66433eb82f005e1d6202\" , \"receiptsRoot\" : \"0x5eced534b3d84d3d732ddbc714f5fd51d98a941b28182b6efe6df3a0fe90004b\" , \"sha3Uncles\" : \"0x8a562e7634774d3e3a36698ac4915e37fc84a2cd0044cb84fa5d80263d2af4f6\" , \"size\" : \"0x41c7\" , \"stateRoot\" : \"0xf5208fffa2ba5a3f3a2f64ebd5ca3d098978bedd75f335f56b705d8715ee2305\" , \"timestamp\" : \"0x5b541449\" , \"totalDifficulty\" : \"0x12ac11391a2f3872fcd\" , \"transactionsRoot\" : \"0xf98631e290e88f58a46b7032f025969039aa9b5696498efc76baf436fa69b262\" , \"uncles\" : [] } }","title":"eth_getUncleByBlockNumberAndIndex"},{"location":"api/get/eth_getUncleByBlockNumberAndIndex/#eth_getunclebyblocknumberandindex","text":"","title":"eth_getUncleByBlockNumberAndIndex"},{"location":"api/get/eth_getUncleByBlockNumberAndIndex/#v1jsonrpcnetworketh_getunclebyblocknumberandindex","text":"Returns information about the \u2018Uncle\u2019 of a block by hash and the Uncle index position.","title":"/v1/jsonrpc/:network/eth_getUncleByBlockNumberAndIndex"},{"location":"api/get/eth_getUncleByBlockNumberAndIndex/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getUncleByBlockNumberAndIndex?params=:paramsJSONArray","title":"REQUEST"},{"location":"api/get/eth_getUncleByBlockNumberAndIndex/#response","text":"","title":"RESPONSE"},{"location":"api/get/eth_getUncleCountByBlockHash/","text":"eth_getUncleCountByBlockHash \uf0c1 /v1/jsonrpc/:network/eth_getUncleCountByBlockHash \uf0c1 Returns the number of uncles in a block from a block matching the given block hash. REQUEST \uf0c1 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getUncleCountByBlockHash?params=:paramsJSONArray HEADERS Content-Type: application/json REQUEST PARAMS BLOCK HASH [required] - a string representing the hash (32 bytes) of a block EXAMPLE // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getUncleCountByBlockHash --data-urlencode 'params=[\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleCountByBlockHash\",\"params\": [\"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getUncleCountByBlockHash\" , \"params\" : [ \"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35\" ] , \"id\" :1 } RESPONSE \uf0c1 RESULT FIELDS BLOCK TRANSACTION COUNT - a hex code of the integer representing the number of uncles in the provided block BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x1\" }","title":"eth_getUncleCountByBlockHash"},{"location":"api/get/eth_getUncleCountByBlockHash/#eth_getunclecountbyblockhash","text":"","title":"eth_getUncleCountByBlockHash"},{"location":"api/get/eth_getUncleCountByBlockHash/#v1jsonrpcnetworketh_getunclecountbyblockhash","text":"Returns the number of uncles in a block from a block matching the given block hash.","title":"/v1/jsonrpc/:network/eth_getUncleCountByBlockHash"},{"location":"api/get/eth_getUncleCountByBlockHash/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getUncleCountByBlockHash?params=:paramsJSONArray","title":"REQUEST"},{"location":"api/get/eth_getUncleCountByBlockHash/#response","text":"","title":"RESPONSE"},{"location":"api/get/eth_getUncleCountByBlockNumber/","text":"eth_getUncleCountByBlockNumber \uf0c1 /v1/jsonrpc/:network/eth_getUncleCountByBlockNumber \uf0c1 Returns the number of uncles in a block from a block matching the given block number. REQUEST \uf0c1 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getUncleCountByBlockNumber?params=:paramsJSONArray HEADERS Content-Type: application/json REQUEST PARAMS BLOCK PARAMETER [required] - an integer block number, or the string \u201clatest\u201d, \u201cearliest\u201d or \u201cpending\u201d, see the default block parameter EXAMPLE // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getUncleCountByBlockNumber --data-urlencode 'params=[\"latest\"]' // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleCountByBlockNumber\",\"params\": [\"latest\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getUncleCountByBlockNumber\" , \"params\" : [ \"latest\" ] , \"id\" :1 } RESPONSE \uf0c1 RESULT FIELDS BLOCK TRANSACTION COUNT - a hex code of the integer representing the number of uncles in the provided block BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"0x57\" }","title":"eth_getUncleCountByBlockNumber"},{"location":"api/get/eth_getUncleCountByBlockNumber/#eth_getunclecountbyblocknumber","text":"","title":"eth_getUncleCountByBlockNumber"},{"location":"api/get/eth_getUncleCountByBlockNumber/#v1jsonrpcnetworketh_getunclecountbyblocknumber","text":"Returns the number of uncles in a block from a block matching the given block number.","title":"/v1/jsonrpc/:network/eth_getUncleCountByBlockNumber"},{"location":"api/get/eth_getUncleCountByBlockNumber/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getUncleCountByBlockNumber?params=:paramsJSONArray","title":"REQUEST"},{"location":"api/get/eth_getUncleCountByBlockNumber/#response","text":"","title":"RESPONSE"},{"location":"api/get/eth_getWork/","text":"eth_getWork \uf0c1 /v1/jsonrpc/:network/eth_getWork \uf0c1 Returns the hash of the current block, the seedHash, and the boundary condition to be met (\u201ctarget\u201d). REQUEST \uf0c1 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getWork HEADERS Content-Type: application/json EXAMPLE // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_getWork // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getWork\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getWork\" , \"params\" : [] , \"id\" :1 } RESPONSE \uf0c1 RESULT FIELDS WORK ARRAY 32 Bytes - current block header pow-hash 32 Bytes - the seed hash used for the DAG. 32 Bytes - the boundary condition (\u201ctarget\u201d), 2^256 / difficulty. BODY { \"id\" : 1 , \"jsonrpc\" : \"2.0\" , \"result\" : [ \"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\" , \"0x5EED00000000000000000000000000005EED0000000000000000000000000000\" , \"0xd1ff1c01710000000000000000000000d1ff1c01710000000000000000000000\" ] }","title":"eth_getWork"},{"location":"api/get/eth_getWork/#eth_getwork","text":"","title":"eth_getWork"},{"location":"api/get/eth_getWork/#v1jsonrpcnetworketh_getwork","text":"Returns the hash of the current block, the seedHash, and the boundary condition to be met (\u201ctarget\u201d).","title":"/v1/jsonrpc/:network/eth_getWork"},{"location":"api/get/eth_getWork/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_getWork","title":"REQUEST"},{"location":"api/get/eth_getWork/#response","text":"","title":"RESPONSE"},{"location":"api/get/eth_hashrate/","text":"eth_hashrate \uf0c1 /v1/jsonrpc/:network/eth_hashrate \uf0c1 Returns the number of hashes per second that the node is mining with. Only applicable when the node is mining. REQUEST \uf0c1 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_hashrate HEADERS Content-Type: application/json EXAMPLE // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_hashrate // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_hashrate\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_hashrate\" , \"params\" : [] , \"id\" :1 } RESPONSE \uf0c1 RESULT FIELDS HASHRATE - a hex code of an integer representing the number of hashes per second. BODY { jsonrpc : \"2.0\" , id : 1 , result : \"0x38a\" }","title":"eth_hashrate"},{"location":"api/get/eth_hashrate/#eth_hashrate","text":"","title":"eth_hashrate"},{"location":"api/get/eth_hashrate/#v1jsonrpcnetworketh_hashrate","text":"Returns the number of hashes per second that the node is mining with. Only applicable when the node is mining.","title":"/v1/jsonrpc/:network/eth_hashrate"},{"location":"api/get/eth_hashrate/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_hashrate","title":"REQUEST"},{"location":"api/get/eth_hashrate/#response","text":"","title":"RESPONSE"},{"location":"api/get/eth_mining/","text":"eth_mining \uf0c1 /v1/jsonrpc/:network/eth_mining \uf0c1 Returns true if client is actively mining new blocks. REQUEST \uf0c1 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_mining HEADERS Content-Type: application/json EXAMPLE // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_mining // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_mining\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_mining\" , \"params\" : [] , \"id\" :1 } RESPONSE \uf0c1 RESULT FIELDS IS MINING FLAG - a boolean indicating if the client is mining BODY { jsonrpc : \"2.0\" , id : 1 , result : true }","title":"eth_mining"},{"location":"api/get/eth_mining/#eth_mining","text":"","title":"eth_mining"},{"location":"api/get/eth_mining/#v1jsonrpcnetworketh_mining","text":"Returns true if client is actively mining new blocks.","title":"/v1/jsonrpc/:network/eth_mining"},{"location":"api/get/eth_mining/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_mining","title":"REQUEST"},{"location":"api/get/eth_mining/#response","text":"","title":"RESPONSE"},{"location":"api/get/eth_protocolVersion/","text":"eth_protocolVersion \uf0c1 /v1/jsonrpc/:network/eth_protocolVersion \uf0c1 Returns the current ethereum protocol version. REQUEST \uf0c1 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_protocolVersion HEADERS Content-Type: application/json EXAMPLE // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_protocolVersion // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_protocolVersion\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_protocolVersion\" , \"params\" : [] , \"id\" :1 } RESPONSE \uf0c1 RESULT FIELDS PROTOCOL VERSION - a string indicating the current ethereum protocol version BODY { jsonrpc : \"2.0\" , id : 1 , result : \"54\" \" }","title":"eth_protocolVersion"},{"location":"api/get/eth_protocolVersion/#eth_protocolversion","text":"","title":"eth_protocolVersion"},{"location":"api/get/eth_protocolVersion/#v1jsonrpcnetworketh_protocolversion","text":"Returns the current ethereum protocol version.","title":"/v1/jsonrpc/:network/eth_protocolVersion"},{"location":"api/get/eth_protocolVersion/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_protocolVersion","title":"REQUEST"},{"location":"api/get/eth_protocolVersion/#response","text":"","title":"RESPONSE"},{"location":"api/get/eth_syncing/","text":"eth_syncing \uf0c1 /v1/jsonrpc/:network/eth_syncing \uf0c1 Returns an object with data about the sync status or false. REQUEST \uf0c1 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_syncing HEADERS Content-Type: application/json EXAMPLE // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_syncing // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_syncing\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_syncing\" , \"params\" : [] , \"id\" :1 } RESPONSE \uf0c1 RESULT FIELDS SYNC STATUS - a boolean as false only when not syncing SYNC BLOCKS i. startingBlock - a hexcode of the integer indicating the block at which the import started (will only be reset, after the sync reached his head) ii. currentBlock - a hexcode of the integer indicating the current block, same as eth_blockNumber iii. highestBlock - a hexcode of the integer indicating the highest block BODY \\\\ When not syncing { jsonrpc : \"2.0\" , id : 1 , result : \"1\" } \\\\ When syncing { \"id\" : 1 , \"jsonrpc\" : \"2.0\" , \"result\" : { startingBlock : '0x384' , currentBlock : '0x386' , highestBlock : '0x454' } }","title":"eth_syncing"},{"location":"api/get/eth_syncing/#eth_syncing","text":"","title":"eth_syncing"},{"location":"api/get/eth_syncing/#v1jsonrpcnetworketh_syncing","text":"Returns an object with data about the sync status or false.","title":"/v1/jsonrpc/:network/eth_syncing"},{"location":"api/get/eth_syncing/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_syncing","title":"REQUEST"},{"location":"api/get/eth_syncing/#response","text":"","title":"RESPONSE"},{"location":"api/get/net_listening/","text":"net_listening \uf0c1 /v1/jsonrpc/:network/net_listening \uf0c1 Returns true if client is actively listening for network connections. REQUEST \uf0c1 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/net_listening HEADERS Content-Type: application/json EXAMPLE // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/net_listening // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"net_listening\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"net_listening\" , \"params\" : [] , \"id\" :1 } RESPONSE \uf0c1 RESULT FIELDS LISTENING FLAG - a boolean indicating whether the client is actively listening for network connections BODY { jsonrpc : \"2.0\" , id : 1 , result : true }","title":"net_listening"},{"location":"api/get/net_listening/#net_listening","text":"","title":"net_listening"},{"location":"api/get/net_listening/#v1jsonrpcnetworknet_listening","text":"Returns true if client is actively listening for network connections.","title":"/v1/jsonrpc/:network/net_listening"},{"location":"api/get/net_listening/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/net_listening","title":"REQUEST"},{"location":"api/get/net_listening/#response","text":"","title":"RESPONSE"},{"location":"api/get/net_peerCount/","text":"net_peerCount \uf0c1 /v1/jsonrpc/:network/net_peerCount \uf0c1 Returns the number of peers currently connected to the client. REQUEST \uf0c1 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/net_peerCount HEADERS Content-Type: application/json EXAMPLE // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/net_peerCount // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"net_peerCount\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"net_peerCount\" , \"params\" : [] , \"id\" :1 } RESPONSE \uf0c1 RESULT FIELDS PEER COUNT - integer of the number of connected peers. BODY { jsonrpc : \"2.0\" , id : 1 , result : \"0x64\" }","title":"net_peerCount"},{"location":"api/get/net_peerCount/#net_peercount","text":"","title":"net_peerCount"},{"location":"api/get/net_peerCount/#v1jsonrpcnetworknet_peercount","text":"Returns the number of peers currently connected to the client.","title":"/v1/jsonrpc/:network/net_peerCount"},{"location":"api/get/net_peerCount/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/net_peerCount","title":"REQUEST"},{"location":"api/get/net_peerCount/#response","text":"","title":"RESPONSE"},{"location":"api/get/net_version/","text":"net_version \uf0c1 /v1/jsonrpc/:network/net_version \uf0c1 Returns the current network id. REQUEST \uf0c1 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/net_version HEADERS Content-Type: application/json EXAMPLE // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/net_version // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"net_version\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"net_version\" , \"params\" : [] , \"id\" :1 } RESPONSE \uf0c1 RESULT FIELDS NETWORK ID - a string representing the current network id. BODY { jsonrpc : \"2.0\" , id : 1 , result : \"1\" }","title":"net_version"},{"location":"api/get/net_version/#net_version","text":"","title":"net_version"},{"location":"api/get/net_version/#v1jsonrpcnetworknet_version","text":"Returns the current network id.","title":"/v1/jsonrpc/:network/net_version"},{"location":"api/get/net_version/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/net_version","title":"REQUEST"},{"location":"api/get/net_version/#response","text":"","title":"RESPONSE"},{"location":"api/get/networkMethod/","text":"method \uf0c1 /v1/jsonrpc/network/method \uf0c1 A request using an \u201cHTTP GET-compatible\u201d (non-state-changing) JSON-RPC method. Most Ethereum JSON-RPC methods can be described in this way, since they query the blockchain for various pieces of information. Use the /v1/jsonrpc/{network}/methods endpoint to get the list of permitted methods. GET \uf0c1 GET https://api.backbonecabal.xyz/v1/jsonrpc/network/method?params= Parameters network Ethereum network in lowercase. Possible values: mainnet , ropsten , kovan , rinkeby Enum method JSON-RPC method. Use the /v1/jsonrpc/{network}/methods endpoint to get the list of permitted methods. String params This is the params field that would normally be part of the JSON-RPC POST body. Use the exact same format. If it\u2019s omitted, it will default to an empty array. Array Request \uf0c1 curl --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.backbonecabal.xyz/v1/jsonrpc/{network}/{method}?params=' Response \uf0c1 Attributes jsonrpc required enum JSON-RPC version 2.0 string id required number JSON-RPC request ID result string JSON-RPC result (can also be an object) JSON-RPC Response 200 HEADERS Content-Type:application/json BODY { \"jsonrpc\": \"2.0\", \"id\": -5294191, \"result\": \"sed dolor eu ullamco\" } JSON Schema { \"type\": \"object\", \"properties\": { \"jsonrpc\": { \"type\": \"string\", \"description\": \"JSON-RPC version\", \"enum\": [ \"2.0\" ] }, \"id\": { \"type\": \"integer\", \"description\": \"JSON-RPC request ID\" }, \"result\": { \"type\": \"string\", \"description\": \"JSON-RPC result (can also be an object)\" } }, \"required\": [ \"jsonrpc\", \"id\" ] } Response \uf0c1 Bad JSON in params query parameter 400 HEADERS Content-Type:application/json Response \uf0c1 JSON-RPC method is not a valid GET method 404 HEADERS Content-Type:application/json Response \uf0c1 Server error 500 HEADERS Content-Type:application/json Response \uf0c1 Ethereum client error 502 HEADERS Content-Type:application/json","title":"method"},{"location":"api/get/networkMethod/#method","text":"","title":"method"},{"location":"api/get/networkMethod/#v1jsonrpcnetworkmethod","text":"A request using an \u201cHTTP GET-compatible\u201d (non-state-changing) JSON-RPC method. Most Ethereum JSON-RPC methods can be described in this way, since they query the blockchain for various pieces of information. Use the /v1/jsonrpc/{network}/methods endpoint to get the list of permitted methods.","title":"/v1/jsonrpc/network/method"},{"location":"api/get/networkMethod/#get","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/network/method?params= Parameters network Ethereum network in lowercase. Possible values: mainnet , ropsten , kovan , rinkeby Enum method JSON-RPC method. Use the /v1/jsonrpc/{network}/methods endpoint to get the list of permitted methods. String params This is the params field that would normally be part of the JSON-RPC POST body. Use the exact same format. If it\u2019s omitted, it will default to an empty array. Array","title":"GET"},{"location":"api/get/networkMethod/#request","text":"curl --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.backbonecabal.xyz/v1/jsonrpc/{network}/{method}?params='","title":"Request"},{"location":"api/get/networkMethod/#response","text":"Attributes jsonrpc required enum JSON-RPC version 2.0 string id required number JSON-RPC request ID result string JSON-RPC result (can also be an object)","title":"Response"},{"location":"api/get/networkMethod/#response_1","text":"Bad JSON in params query parameter 400","title":"Response"},{"location":"api/get/networkMethod/#response_2","text":"JSON-RPC method is not a valid GET method 404","title":"Response"},{"location":"api/get/networkMethod/#response_3","text":"Server error 500","title":"Response"},{"location":"api/get/networkMethod/#response_4","text":"Ethereum client error 502","title":"Response"},{"location":"api/get/networkMethods/","text":"methods \uf0c1 /v1/jsonrpc/network/methods \uf0c1 The JSON-RPC methods supported by the /v1/jsonrpc/{network}/{method} (GET) and /v1/jsonrpc/{network} (POST) endpoints. GET \uf0c1 GET https://api.backbonecabal.xyz/v1/jsonrpc/network/methods Parameters \uf0c1 Attributes network Ethereum network in lowercase. Possible values: mainnet , ropsten , kovan , rinkeby enum Request \uf0c1 curl --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.backbonecabal.xyz/v1/jsonrpc/{network}/methods' Response \uf0c1 Attributes get required array List of methods supported by the /v1/jsonrpc/{network}/{method} endpoint (GET) string 0 post required array List of methods supported by the /v1/jsonrpc/{network} endpoint (POST) string 0 Methods Response 200 HEADERS Content-Type:application/json BODY { \"get\": [ \"culpa ipsum sunt dolor\", \"labore in\", \"sunt pariatur eiusmod\", \"nostrud mollit\" ], \"post\": [ \"aute aliqua elit\", \"eu tempor nulla Excepteur eiusmod\", \"ipsum et officia laborum\" ] } JSON Schema { \"type\": \"object\", \"properties\": { \"get\": { \"type\": \"array\", \"description\": \"List of methods supported by the /v1/jsonrpc/{network}/{method} endpoint (GET)\", \"items\": { \"type\": \"string\" } }, \"post\": { \"type\": \"array\", \"description\": \"List of methods supported by the /v1/jsonrpc/{network} endpoint (POST)\", \"items\": { \"type\": \"string\" } } }, \"required\": [ \"get\", \"post\" ] } Response \uf0c1 Server error 500 HEADERS Content-Type:application/json","title":"methods"},{"location":"api/get/networkMethods/#methods","text":"","title":"methods"},{"location":"api/get/networkMethods/#v1jsonrpcnetworkmethods","text":"The JSON-RPC methods supported by the /v1/jsonrpc/{network}/{method} (GET) and /v1/jsonrpc/{network} (POST) endpoints.","title":"/v1/jsonrpc/network/methods"},{"location":"api/get/networkMethods/#get","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/network/methods","title":"GET"},{"location":"api/get/networkMethods/#parameters","text":"Attributes network Ethereum network in lowercase. Possible values: mainnet , ropsten , kovan , rinkeby enum","title":"Parameters"},{"location":"api/get/networkMethods/#request","text":"curl --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.backbonecabal.xyz/v1/jsonrpc/{network}/methods'","title":"Request"},{"location":"api/get/networkMethods/#response","text":"Attributes get required array List of methods supported by the /v1/jsonrpc/{network}/{method} endpoint (GET) string 0 post required array List of methods supported by the /v1/jsonrpc/{network} endpoint (POST) string 0","title":"Response"},{"location":"api/get/networkMethods/#response_1","text":"Server error 500","title":"Response"},{"location":"api/get/symbol/","text":"symbol \uf0c1 /v1/jsonrpc/symbol \uf0c1 Get pricing (ticker) data for various currency pairs (fiat, crypto, and tokens) using data from several exchanges. This endpoint shows the price at the exchange with the most volume for the symbol. Use the /v1/ticker/symbols endpoint for the full list of supported symbols. GET \uf0c1 GET https://api.backbonecabal.xyz/v1/ticker/symbol Parameters symbol Ticker symbol (currency pair) String Request \uf0c1 curl --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.backbonecabal.xyz/v1/ticker/{symbol}' Response \uf0c1 Attributes base string Currency pair base quote string Currency pair quote bid number Bid at the exchange with the most volume ask number Ask at the exchange with most volume exchange string The exchange with the most volume volume number Volume at the exchange with the most volume num_exchanges number Number of exchanges queried total_volume number Total volume across all exchanges queried timestamp number Unix timestamp Ticker Response 200 HEADERS Content-Type:application/json","title":"symbol"},{"location":"api/get/symbol/#symbol","text":"","title":"symbol"},{"location":"api/get/symbol/#v1jsonrpcsymbol","text":"Get pricing (ticker) data for various currency pairs (fiat, crypto, and tokens) using data from several exchanges. This endpoint shows the price at the exchange with the most volume for the symbol. Use the /v1/ticker/symbols endpoint for the full list of supported symbols.","title":"/v1/jsonrpc/symbol"},{"location":"api/get/symbol/#get","text":"GET https://api.backbonecabal.xyz/v1/ticker/symbol Parameters symbol Ticker symbol (currency pair) String","title":"GET"},{"location":"api/get/symbol/#request","text":"curl --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.backbonecabal.xyz/v1/ticker/{symbol}'","title":"Request"},{"location":"api/get/symbol/#response","text":"Attributes base string Currency pair base quote string Currency pair quote bid number Bid at the exchange with the most volume ask number Ask at the exchange with most volume exchange string The exchange with the most volume volume number Volume at the exchange with the most volume num_exchanges number Number of exchanges queried total_volume number Total volume across all exchanges queried timestamp number Unix timestamp","title":"Response"},{"location":"api/get/symbolFull/","text":"full \uf0c1 /v1/ticker/symbol/full \uf0c1 Get pricing (ticker) data for various currency pairs (fiat, crypto, and tokens) using data from several exchanges. This endpoint shows the price at various exchanges where the symbol is traded. Use the /v1/ticker/symbols endpoint for the full list of supported symbols. GET \uf0c1 GET https://api.backbonecabal.xyz/v1/ticker/symbol/full Parameters Symbol Ticker symbol (currency pair string Request \uf0c1 curl --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.backbonecabal.xyz/v1/ticker/{symbol}/full' Response \uf0c1 Attributes base string Currency pair base quote string Currency pair quote tickers array List of tickers at various exchanges object 0 bid number ask number exchange string volume number `timestamp number Full ticker Response 200 HEADERS Content-Type:application/json","title":"full"},{"location":"api/get/symbolFull/#full","text":"","title":"full"},{"location":"api/get/symbolFull/#v1tickersymbolfull","text":"Get pricing (ticker) data for various currency pairs (fiat, crypto, and tokens) using data from several exchanges. This endpoint shows the price at various exchanges where the symbol is traded. Use the /v1/ticker/symbols endpoint for the full list of supported symbols.","title":"/v1/ticker/symbol/full"},{"location":"api/get/symbolFull/#get","text":"GET https://api.backbonecabal.xyz/v1/ticker/symbol/full Parameters Symbol Ticker symbol (currency pair string","title":"GET"},{"location":"api/get/symbolFull/#request","text":"curl --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.backbonecabal.xyz/v1/ticker/{symbol}/full'","title":"Request"},{"location":"api/get/symbolFull/#response","text":"Attributes base string Currency pair base quote string Currency pair quote tickers array List of tickers at various exchanges object 0 bid number ask number exchange string volume number `timestamp number","title":"Response"},{"location":"api/get/symbols/","text":"symbols \uf0c1 /v1/ticker/symbols \uf0c1 Get a list of supported symbols (currency pairs), including fiat, crypto, and tokens GET \uf0c1 GET https://api.backbonecabal.xyz/v1/ticker/symbols Request \uf0c1 curl --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.backbonecabal.xyz/v1/ticker/symbols' Response \uf0c1 Attributes symbols array List of supported symbols (currency pairs) string 0 Symbols Response 200 HEADERS Content-Type:application/json","title":"symbols"},{"location":"api/get/symbols/#symbols","text":"","title":"symbols"},{"location":"api/get/symbols/#v1tickersymbols","text":"Get a list of supported symbols (currency pairs), including fiat, crypto, and tokens","title":"/v1/ticker/symbols"},{"location":"api/get/symbols/#get","text":"GET https://api.backbonecabal.xyz/v1/ticker/symbols","title":"GET"},{"location":"api/get/symbols/#request","text":"curl --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.backbonecabal.xyz/v1/ticker/symbols'","title":"Request"},{"location":"api/get/symbols/#response","text":"Attributes symbols array List of supported symbols (currency pairs) string 0","title":"Response"},{"location":"api/get/v1Blacklist/","text":"v1 Blacklist \uf0c1 /v1/blacklist \uf0c1 Return a blacklist of phishing sites. This list is maintained by GitHub user 409H at https://github.com/409H/EtherAddressLookup/blob/master/blacklists/domains.json . GET \uf0c1 GET https://api.backbonecabal.xyz/v1/blacklist Request \uf0c1 curl --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.backbonecabal.xyz/v1/blacklist' Response \uf0c1 Attributes string 0 List of blacklisted phishing domains 200 HEADERS Content-Type:application/json BODY [ \"quis esse ut\", \"dolor quis\", \"dolore culpa et\", \"laboris Ut ut nisi commodo\", \"l\" ] JSON Schema { \"type\": \"array\", \"items\": { \"type\": \"string\" } } Response Github is having issues 502 HEADERS Content-Type:application/json","title":"v1 Blacklist"},{"location":"api/get/v1Blacklist/#v1-blacklist","text":"","title":"v1 Blacklist"},{"location":"api/get/v1Blacklist/#v1blacklist","text":"Return a blacklist of phishing sites. This list is maintained by GitHub user 409H at https://github.com/409H/EtherAddressLookup/blob/master/blacklists/domains.json .","title":"/v1/blacklist"},{"location":"api/get/v1Blacklist/#get","text":"GET https://api.backbonecabal.xyz/v1/blacklist","title":"GET"},{"location":"api/get/v1Blacklist/#request","text":"curl --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.backbonecabal.xyz/v1/blacklist'","title":"Request"},{"location":"api/get/v1Blacklist/#response","text":"Attributes string 0","title":"Response"},{"location":"api/get/v2Blacklist/","text":"v2 Blacklist \uf0c1 /v2/blacklist \uf0c1 Return a blacklist of phishing sites, as well as a whitelist and a fuzzylist. This list is maintained by the MetaMask project at https://github.com/MetaMask/eth-phishing-detect/blob/master/src/config.json . GET \uf0c1 GET https://api.backbonecabal.xyz/v2/blacklist Request \uf0c1 curl --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.backbonecabal.xyz/v2/blacklist' Response \uf0c1 Attributes version required number Version tolerance required number Tolerance fuzzylist required array Fuzzylist string 0 whitelist required array Whitelist string 0 blacklist required array Blacklist string 0 Phishing blacklist, whitelist, and fuzzylist 200 HEADERS Content-Type:application/json BODY { \"version\": 38611173, \"tolerance\": 49572925, \"fuzzylist\": [ \"eiusmod anim mollit Ut\", \"minim et ea ex\" ], \"whitelist\": [ \"irure Duis\", \"officia minim voluptate cillum ullamco\", \"nostrud aliquip\", \"ex in sint velit\", \"Excepteur veniam fugi\" ], \"blacklist\": [ \"do in tempor consectet\" ] } JSON Schema { \"type\": \"object\", \"properties\": { \"version\": { \"type\": \"integer\", \"description\": \"Version\" }, \"tolerance\": { \"type\": \"integer\", \"description\": \"Tolerance\" }, \"fuzzylist\": { \"description\": \"Fuzzylist\", \"type\": \"array\", \"items\": { \"type\": \"string\" } }, \"whitelist\": { \"description\": \"Whitelist\", \"type\": \"array\", \"items\": { \"type\": \"string\" } }, \"blacklist\": { \"description\": \"Blacklist\", \"type\": \"array\", \"items\": { \"type\": \"string\" } } }, \"required\": [ \"version\", \"tolerance\", \"fuzzylist\", \"whitelist\", \"blacklist\" ] } Response Github is having issues 502 HEADERS Content-Type:application/json","title":"v2 Blacklist"},{"location":"api/get/v2Blacklist/#v2-blacklist","text":"","title":"v2 Blacklist"},{"location":"api/get/v2Blacklist/#v2blacklist","text":"Return a blacklist of phishing sites, as well as a whitelist and a fuzzylist. This list is maintained by the MetaMask project at https://github.com/MetaMask/eth-phishing-detect/blob/master/src/config.json .","title":"/v2/blacklist"},{"location":"api/get/v2Blacklist/#get","text":"GET https://api.backbonecabal.xyz/v2/blacklist","title":"GET"},{"location":"api/get/v2Blacklist/#request","text":"curl --include \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ 'https://api.backbonecabal.xyz/v2/blacklist'","title":"Request"},{"location":"api/get/v2Blacklist/#response","text":"Attributes version required number Version tolerance required number Tolerance fuzzylist required array Fuzzylist string 0 whitelist required array Whitelist string 0 blacklist required array Blacklist string 0","title":"Response"},{"location":"api/get/web3_clientVersion/","text":"web3_clientVersion \uf0c1 /v1/jsonrpc/:network/web3_clientVersion \uf0c1 Returns the current client version. REQUEST \uf0c1 GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/web3_clientVersion HEADERS Content-Type: application/json EXAMPLE // HTTP GET curl -G https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/web3_clientVersion // HTTP POST curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"web3_clientVersion\",\"params\": [],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"web3_clientVersion\" , \"params\" : [] , \"id\" :1 } RESPONSE \uf0c1 RESULT FIELDS STRING - The current client version BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 1 , \"result\" : \"Geth/v1.8.6-patched-leveldb-8818ab0b/linux-amd64/go1.9.2\" }","title":"web3_clientVersion"},{"location":"api/get/web3_clientVersion/#web3_clientversion","text":"","title":"web3_clientVersion"},{"location":"api/get/web3_clientVersion/#v1jsonrpcnetworkweb3_clientversion","text":"Returns the current client version.","title":"/v1/jsonrpc/:network/web3_clientVersion"},{"location":"api/get/web3_clientVersion/#request","text":"GET https://api.backbonecabal.xyz/v1/jsonrpc/:network/web3_clientVersion","title":"REQUEST"},{"location":"api/get/web3_clientVersion/#response","text":"","title":"RESPONSE"},{"location":"api/post/eth_call/","text":"eth_call \uf0c1 /v1/jsonrpc/:network/eth_call \uf0c1 Executes a new message call immediately without creating a transaction on the block chain. REQUEST \uf0c1 POST https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_call HEADERS Content-Type: application/json REQUEST PAYLOAD TRANSACTION CALL OBJECT [required] from : [optional] 20 Bytes - The address the transaction is sent from. to : 20 Bytes - The address the transaction is directed to. gas : [optional] Integer of the gas provided for the transaction execution. eth_call consumes zero gas, but this parameter may be needed by some executions. gasPrice : [optional] Integer of the gasPrice used for each paid gas value : [optional] Integer of the value sent with this transaction data : [optional] Hash of the method signature and encoded parameters. For details see Ethereum Contract ABI BLOCK PARAMETER [required] - an integer block number, or the string \u201clatest\u201d, \u201cearliest\u201d or \u201cpending\u201d, see the default block parameter EXAMPLE // HTTP POST api.backbonecabal.xyz curl https://api.backbonecabal.xyz/v1/jsonrpc/mainnet \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_call\",\"params\": [{\"from\": \"0xb60e8dd61c5d32be8058bb8eb970870f07233155\",\"to\": \"0xd46e8dd67c5d32be8058bb8eb970870f07244567\",\"gas\": \"0x76c0\",\"gasPrice\": \"0x9184e72a000\",\"value\": \"0x9184e72a\",\"data\": \"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\"}, \"latest\"],\"id\":1}' // HTTP POST mainnet.backbonecabal.xyz curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_call\",\"params\": [{\"from\": \"0xb60e8dd61c5d32be8058bb8eb970870f07233155\",\"to\": \"0xd46e8dd67c5d32be8058bb8eb970870f07244567\",\"gas\": \"0x76c0\",\"gasPrice\": \"0x9184e72a000\",\"value\": \"0x9184e72a\",\"data\": \"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\"}, \"latest\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_call\" , \"params\" : [{ \"from\" : \"0xb60e8dd61c5d32be8058bb8eb970870f07233155\" , \"to\" : \"0xd46e8dd67c5d32be8058bb8eb970870f07244567\" , \"gas\" : \"0x76c0\" , \"gasPrice\" : \"0x9184e72a000\" , \"value\" : \"0x9184e72a\" , \"data\" : \"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\" } , \"latest\" ] , \"id\" :1 } RESPONSE \uf0c1 RESULT FIELDS RETURN VALUE - the return value of executed contract. BODY { \"id\" : 1 , \"jsonrpc\" : \"2.0\" , \"result\" : \"0x\" }","title":"eth_call"},{"location":"api/post/eth_call/#eth_call","text":"","title":"eth_call"},{"location":"api/post/eth_call/#v1jsonrpcnetworketh_call","text":"Executes a new message call immediately without creating a transaction on the block chain.","title":"/v1/jsonrpc/:network/eth_call"},{"location":"api/post/eth_call/#request","text":"POST https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_call","title":"REQUEST"},{"location":"api/post/eth_call/#response","text":"","title":"RESPONSE"},{"location":"api/post/eth_estimateGas/","text":"eth_estimateGas \uf0c1 /v1/jsonrpc/:network/eth_estimateGas \uf0c1 Generates and returns an estimate of how much gas is necessary to allow the transaction to complete. The transaction will not be added to the blockchain. Note that the estimate may be significantly more than the amount of gas actually used by the transaction, for a variety of reasons including EVM mechanics and node performance. REQUEST \uf0c1 POST https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_estimateGas HEADERS Content-Type: application/json REQUEST PAYLOAD TRANSACTION CALL OBJECT [required] from : [optional] 20 Bytes - The address the transaction is sent from. to : 20 Bytes - The address the transaction is directed to. gas : [optional] Integer of the gas provided for the transaction execution. eth_estimateGas consumes zero gas, but this parameter may be needed by some executions. gasPrice : [optional] Integer of the gasPrice used for each paid gas value : [optional] Integer of the value sent with this transaction data : [optional] Hash of the method signature and encoded parameters. For details see Ethereum Contract ABI If no gas limit is specified geth uses the block gas limit from the pending block as an upper bound. As a result the returned estimate might not be enough to executed the call/transaction when the amount of gas is higher than the pending block gas limit. EXAMPLE // HTTP POST api.backbonecabal.xyz curl https://api.backbonecabal.xyz/v1/jsonrpc/mainnet \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_estimateGas\",\"params\": [{\"from\": \"0xb60e8dd61c5d32be8058bb8eb970870f07233155\",\"to\": \"0xd46e8dd67c5d32be8058bb8eb970870f07244567\",\"gas\": \"0x76c0\",\"gasPrice\": \"0x9184e72a000\",\"value\": \"0x9184e72a\",\"data\": \"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\"}],\"id\":1}' // HTTP POST mainnet.backbonecabal.xyz curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_estimateGas\",\"params\": [{\"from\": \"0xb60e8dd61c5d32be8058bb8eb970870f07233155\",\"to\": \"0xd46e8dd67c5d32be8058bb8eb970870f07244567\",\"gas\": \"0x76c0\",\"gasPrice\": \"0x9184e72a000\",\"value\": \"0x9184e72a\",\"data\": \"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\"}],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_estimateGas\" , \"params\" : [{ \"from\" : \"0xb60e8dd61c5d32be8058bb8eb970870f07233155\" , \"to\" : \"0xd46e8dd67c5d32be8058bb8eb970870f07244567\" , \"gas\" : \"0x76c0\" , \"gasPrice\" : \"0x9184e72a000\" , \"value\" : \"0x9184e72a\" , \"data\" : \"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\" }] , \"id\" :1 } RESPONSE \uf0c1 RESULT FIELDS GAS USED - the amount of gas used. BODY { \"id\" : 1 , \"jsonrpc\" : \"2.0\" , \"result\" : \"0x5cec\" }","title":"eth_estimateGas"},{"location":"api/post/eth_estimateGas/#eth_estimategas","text":"","title":"eth_estimateGas"},{"location":"api/post/eth_estimateGas/#v1jsonrpcnetworketh_estimategas","text":"Generates and returns an estimate of how much gas is necessary to allow the transaction to complete. The transaction will not be added to the blockchain. Note that the estimate may be significantly more than the amount of gas actually used by the transaction, for a variety of reasons including EVM mechanics and node performance.","title":"/v1/jsonrpc/:network/eth_estimateGas"},{"location":"api/post/eth_estimateGas/#request","text":"POST https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_estimateGas","title":"REQUEST"},{"location":"api/post/eth_estimateGas/#response","text":"","title":"RESPONSE"},{"location":"api/post/eth_sendRawTransaction/","text":"eth_sendRawTransaction \uf0c1 /v1/jsonrpc/:network/eth_sendRawTransaction \uf0c1 Creates new message call transaction or a contract creation for signed transactions. REQUEST \uf0c1 POST https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_sendRawTransaction HEADERS Content-Type: application/json REQUEST PAYLOAD TRANSACTION DATA [required] - The signed transaction data. EXAMPLE // HTTP POST api.backbonecabal.xyz curl https://api.backbonecabal.xyz/v1/jsonrpc/mainnet \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_sendRawTransaction\",\"params\":[\"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\"],\"id\":1}' // HTTP POST mainnet.backbonecabal.xyz curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_sendRawTransaction\",\"params\":[\"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_sendRawTransaction\" , \"params\" : [ \"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\" ] , \"id\" :1 } RESPONSE \uf0c1 RESULT FIELDS TRANSACTION HASH - 32 Bytes - the transaction hash, or the zero hash if the transaction is not yet available NOTE - Use eth_getTransactionReceipt to get the contract address, after the transaction was mined, when you created a contract. BODY { \"id\" : 1 , \"jsonrpc\" : \"2.0\" , \"result\" : \"0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331\" }","title":"eth_sendRawTransaction"},{"location":"api/post/eth_sendRawTransaction/#eth_sendrawtransaction","text":"","title":"eth_sendRawTransaction"},{"location":"api/post/eth_sendRawTransaction/#v1jsonrpcnetworketh_sendrawtransaction","text":"Creates new message call transaction or a contract creation for signed transactions.","title":"/v1/jsonrpc/:network/eth_sendRawTransaction"},{"location":"api/post/eth_sendRawTransaction/#request","text":"POST https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_sendRawTransaction","title":"REQUEST"},{"location":"api/post/eth_sendRawTransaction/#response","text":"","title":"RESPONSE"},{"location":"api/post/eth_submitHashrate/","text":"eth_submitHashrate \uf0c1 /v1/jsonrpc/:network/eth_submitHashrate \uf0c1 Used for submitting mining hashrate. REQUEST \uf0c1 POST https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_submitHashrate HEADERS Content-Type: application/json REQUEST PAYLOAD HASHRATE [required] - a hexadecimal string representation (32 bytes) of the hash rate ID [required] - a string representing a random hexadecimal (32 bytes) ID identifying the client EXAMPLE // HTTP POST api.backbonecabal.xyz curl https://api.backbonecabal.xyz/v1/jsonrpc/mainnet \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_submitHashrate\",\"params\":[\"0x0000000000000000000000000000000000000000000000000000000000500000\", \"0x59daa26581d0acd1fce254fb7e85952f4c09d0915afd33d3886cd914bc7d283c\"],\"id\":1}' // HTTP POST mainnet.backbonecabal.xyz curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_submitHashrate\",\"params\":[\"0x0000000000000000000000000000000000000000000000000000000000500000\", \"0x59daa26581d0acd1fce254fb7e85952f4c09d0915afd33d3886cd914bc7d283c\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_submitHashrate\" , \"params\" : [ \"0x0000000000000000000000000000000000000000000000000000000000500000\" , \"0x59daa26581d0acd1fce254fb7e85952f4c09d0915afd33d3886cd914bc7d283c\" ] , \"id\" :1 } RESPONSE \uf0c1 RESULT FIELDS SUCCESS - returns true if submitting went through succesfully and false otherwise. BODY { \"id\" : 73 , \"jsonrpc\" : \"2.0\" , \"result\" : true }","title":"eth_submitHashrate"},{"location":"api/post/eth_submitHashrate/#eth_submithashrate","text":"","title":"eth_submitHashrate"},{"location":"api/post/eth_submitHashrate/#v1jsonrpcnetworketh_submithashrate","text":"Used for submitting mining hashrate.","title":"/v1/jsonrpc/:network/eth_submitHashrate"},{"location":"api/post/eth_submitHashrate/#request","text":"POST https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_submitHashrate","title":"REQUEST"},{"location":"api/post/eth_submitHashrate/#response","text":"","title":"RESPONSE"},{"location":"api/post/eth_submitWork/","text":"eth_submitWork \uf0c1 /v1/jsonrpc/:network/eth_submitWork \uf0c1 Used for submitting a proof-of-work solution. REQUEST \uf0c1 POST https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_submitWork HEADERS Content-Type: application/json REQUEST PAYLOAD WORK ARRAY 8 Bytes - The nonce found (64 bits) 32 Bytes - The header\u2019s pow-hash (256 bits) 32 Bytes - The mix digest (256 bits) EXAMPLE // HTTP POST api.backbonecabal.xyz curl https://api.backbonecabal.xyz/v1/jsonrpc/mainnet \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_submitWork\",\"params\": [\"0x0000000000000001\",\"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\",\"0xD1FE5700000000000000000000000000D1FE5700000000000000000000000000\"],\"id\":1}' // HTTP POST mainnet.backbonecabal.xyz curl https://mainnet.backbonecabal.xyz/ \\ -X POST \\ -H \"Content-Type: application/json\" \\ -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_submitWork\",\"params\": [\"0x0000000000000001\",\"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\",\"0xD1FE5700000000000000000000000000D1FE5700000000000000000000000000\"],\"id\":1}' // WEBSOCKETS >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_submitWork\" , \"params\" : [ \"0x0000000000000001\" , \"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\" , \"0xD1FE5700000000000000000000000000D1FE5700000000000000000000000000\" ] , \"id\" :1 } RESPONSE \uf0c1 RESULT FIELDS IS VALID FLAG - returns true if the provided solution is valid, otherwise false. BODY { \"id\" : 1 , \"jsonrpc\" : \"2.0\" , \"result\" : false }","title":"eth_submitWork"},{"location":"api/post/eth_submitWork/#eth_submitwork","text":"","title":"eth_submitWork"},{"location":"api/post/eth_submitWork/#v1jsonrpcnetworketh_submitwork","text":"Used for submitting a proof-of-work solution.","title":"/v1/jsonrpc/:network/eth_submitWork"},{"location":"api/post/eth_submitWork/#request","text":"POST https://api.backbonecabal.xyz/v1/jsonrpc/:network/eth_submitWork","title":"REQUEST"},{"location":"api/post/eth_submitWork/#response","text":"","title":"RESPONSE"},{"location":"api/post/network/","text":"network \uf0c1 /v1/jsonrpc/network \uf0c1 A request using an \u201cHTTP POST-compatible\u201d (state-changing) JSON-RPC method. Use the /v1/jsonrpc/{network}/methods endpoint to get the list of permitted methods. Use the regular Ethereum JSON-RPC format for the POST body. POST \uf0c1 POST https://api.backbonecabal.xyz/v1/jsonrpc/network Parameters Symbol Ticker symbol (currency pair string Request \uf0c1 Attributes Attributes jsonrpc required enum JSON-RPC version 2.0 string id required number JSON-RPC request ID method required enum Ethereum JSON-RPC method eth_sendRawTransaction string eth_estimateGas string eth_submitWork string eth_submitHashrate string params required array JSON-RPC parameters (can be empty) curl --include \\ --request POST \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ --data-binary \"{ \\\"jsonrpc\\\": \\\"2.0\\\", \\\"id\\\": 57386342, \\\"method\\\": \\\"eth_submitHashrate\\\", \\\"params\\\": [] }\" \\ 'https://api.backbonecabal.xyz/v1/jsonrpc/{network}' Response \uf0c1 Attributes jsonrpc required enum JSON-RPC version 2.0 string id required number JSON-RPC request ID result string JSON-RPC result (can also be an object) JSON-RPC Response 200 HEADERS Content-Type:application/json BODY { \"jsonrpc\": \"2.0\", \"id\": 4198843 } JSON Schema { \"type\": \"object\", \"properties\": { \"jsonrpc\": { \"type\": \"string\", \"description\": \"JSON-RPC version\", \"enum\": [ \"2.0\" ] }, \"id\": { \"type\": \"integer\", \"description\": \"JSON-RPC request ID\" }, \"result\": { \"type\": \"string\", \"description\": \"JSON-RPC result (can also be an object)\" } }, \"required\": [ \"jsonrpc\", \"id\" ] } Request \uf0c1 Attributes jsonrpc required enum JSON-RPC version 2.0 string id required number JSON-RPC request ID method required enum Ethereum JSON-RPC method eth_sendRawTransaction string eth_estimateGas string eth_submitWork string eth_submitHashrate string params required array JSON-RPC parameters (can be empty) curl --include \\ --request POST \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ --data-binary \"{ \\\"jsonrpc\\\": \\\"2.0\\\", \\\"id\\\": 1260246, \\\"method\\\": \\\"eth_submitWork\\\", \\\"params\\\": [] }\" \\ 'https://api.backbonecabal.xyz/v1/jsonrpc/{network}' Response \uf0c1 Bad JSON in POST body or missing Content-Type Headers 400 HEADERS Content-Type:application/JSON Request \uf0c1 Attributes jsonrpc required enum JSON-RPC version 2.0 string id required number JSON-RPC request ID method required enum Ethereum JSON-RPC method eth_sendRawTransaction string eth_estimateGas string eth_submitWork string eth_submitHashrate string params required array JSON-RPC parameters (can be empty) curl --include \\ --request POST \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ --data-binary \"{ \\\"jsonrpc\\\": \\\"2.0\\\", \\\"id\\\": -2521981, \\\"method\\\": \\\"eth_estimateGas\\\", \\\"params\\\": [] }\" \\ 'https://api.backbonecabal.xyz/v1/jsonrpc/{network}' Response \uf0c1 JSON-RPC method is not a valid POST method 404 Request \uf0c1 Attributes jsonrpc required enum JSON-RPC version 2.0 string id required number JSON-RPC request ID method required enum Ethereum JSON-RPC method eth_sendRawTransaction string eth_estimateGas string eth_submitWork string eth_submitHashrate string params required array JSON-RPC parameters (can be empty) curl --include \\ --request POST \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ --data-binary \"{ \\\"jsonrpc\\\": \\\"2.0\\\", \\\"id\\\": -50206243, \\\"method\\\": \\\"eth_submitWork\\\", \\\"params\\\": [] }\" \\ 'https://api.backbonecabal.xyz/v1/jsonrpc/{network}' Response \uf0c1 Server error 500 HEADERS Content-Type:application/JSON Request \uf0c1 Attributes jsonrpc required enum JSON-RPC version 2.0 string id required number JSON-RPC request ID method required enum Ethereum JSON-RPC method eth_sendRawTransaction string eth_estimateGas string eth_submitWork string eth_submitHashrate string params required array JSON-RPC parameters (can be empty) curl --include \\ --request POST \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ --data-binary \"{ \\\"jsonrpc\\\": \\\"2.0\\\", \\\"id\\\": 23533803, \\\"method\\\": \\\"eth_estimateGas\\\", \\\"params\\\": [] }\" \\ 'https://api.backbonecabal.xyz/v1/jsonrpc/{network}' Response \uf0c1 Ethereum client error 502 HEADERS Content-Type:application/JSON","title":"network"},{"location":"api/post/network/#network","text":"","title":"network"},{"location":"api/post/network/#v1jsonrpcnetwork","text":"A request using an \u201cHTTP POST-compatible\u201d (state-changing) JSON-RPC method. Use the /v1/jsonrpc/{network}/methods endpoint to get the list of permitted methods. Use the regular Ethereum JSON-RPC format for the POST body.","title":"/v1/jsonrpc/network"},{"location":"api/post/network/#post","text":"POST https://api.backbonecabal.xyz/v1/jsonrpc/network Parameters Symbol Ticker symbol (currency pair string","title":"POST"},{"location":"api/post/network/#request","text":"","title":"Request"},{"location":"api/post/network/#response","text":"Attributes jsonrpc required enum JSON-RPC version 2.0 string id required number JSON-RPC request ID result string JSON-RPC result (can also be an object)","title":"Response"},{"location":"api/post/network/#request_1","text":"Attributes jsonrpc required enum JSON-RPC version 2.0 string id required number JSON-RPC request ID method required enum Ethereum JSON-RPC method eth_sendRawTransaction string eth_estimateGas string eth_submitWork string eth_submitHashrate string params required array JSON-RPC parameters (can be empty) curl --include \\ --request POST \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ --data-binary \"{ \\\"jsonrpc\\\": \\\"2.0\\\", \\\"id\\\": 1260246, \\\"method\\\": \\\"eth_submitWork\\\", \\\"params\\\": [] }\" \\ 'https://api.backbonecabal.xyz/v1/jsonrpc/{network}'","title":"Request"},{"location":"api/post/network/#response_1","text":"Bad JSON in POST body or missing Content-Type Headers 400","title":"Response"},{"location":"api/post/network/#request_2","text":"Attributes jsonrpc required enum JSON-RPC version 2.0 string id required number JSON-RPC request ID method required enum Ethereum JSON-RPC method eth_sendRawTransaction string eth_estimateGas string eth_submitWork string eth_submitHashrate string params required array JSON-RPC parameters (can be empty) curl --include \\ --request POST \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ --data-binary \"{ \\\"jsonrpc\\\": \\\"2.0\\\", \\\"id\\\": -2521981, \\\"method\\\": \\\"eth_estimateGas\\\", \\\"params\\\": [] }\" \\ 'https://api.backbonecabal.xyz/v1/jsonrpc/{network}'","title":"Request"},{"location":"api/post/network/#response_2","text":"JSON-RPC method is not a valid POST method 404","title":"Response"},{"location":"api/post/network/#request_3","text":"Attributes jsonrpc required enum JSON-RPC version 2.0 string id required number JSON-RPC request ID method required enum Ethereum JSON-RPC method eth_sendRawTransaction string eth_estimateGas string eth_submitWork string eth_submitHashrate string params required array JSON-RPC parameters (can be empty) curl --include \\ --request POST \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ --data-binary \"{ \\\"jsonrpc\\\": \\\"2.0\\\", \\\"id\\\": -50206243, \\\"method\\\": \\\"eth_submitWork\\\", \\\"params\\\": [] }\" \\ 'https://api.backbonecabal.xyz/v1/jsonrpc/{network}'","title":"Request"},{"location":"api/post/network/#response_3","text":"Server error 500","title":"Response"},{"location":"api/post/network/#request_4","text":"Attributes jsonrpc required enum JSON-RPC version 2.0 string id required number JSON-RPC request ID method required enum Ethereum JSON-RPC method eth_sendRawTransaction string eth_estimateGas string eth_submitWork string eth_submitHashrate string params required array JSON-RPC parameters (can be empty) curl --include \\ --request POST \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ --data-binary \"{ \\\"jsonrpc\\\": \\\"2.0\\\", \\\"id\\\": 23533803, \\\"method\\\": \\\"eth_estimateGas\\\", \\\"params\\\": [] }\" \\ 'https://api.backbonecabal.xyz/v1/jsonrpc/{network}'","title":"Request"},{"location":"api/post/network/#response_4","text":"Ethereum client error 502","title":"Response"},{"location":"gettingStarted/makeRequests/","text":"Make Requests \uf0c1 JSON-RPC Methods \uf0c1 Below is a quick command line example using CURL: $ curl -X POST -H \"Content-Type: application/json\" --data '{\"jsonrpc\": \"2.0\", \"id\": 1, \"method\": \"eth_blockNumber\", \"params\": []}' \"https://mainnet.backbonecabal.xyz/YOUR-API-KEY\" The result should look something like this: $ { \"jsonrpc\" : \"2.0\" , \"result\" : \"0x3ccb11\" , \"id\" :1 } NOTE: \u201c0x3ccb11\u201d will be replaced with the block number of the most recent block on that network Read more about JSON RPC Important to note that JSON-RPC is transport agnostic, meaning same concepts can be used over HTTP, WebSockets or other message passing environments. All JSON_RPC methods listed in \u2018Ethereum API\u2019 are also supported over websockets. Rest-like Backbone API \uf0c1 https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_blockNumber?token=YOUR-API-KEY Subscriptions and Filters \uf0c1 In addition to the Ethereum API, Geth version 1.4 has experimental support for pub/sub using subscriptions. This, along with filters, is supported through Backbone\u2019s WebSocket endpoint.","title":"Make Requests"},{"location":"gettingStarted/makeRequests/#make-requests","text":"","title":"Make Requests"},{"location":"gettingStarted/makeRequests/#json-rpc-methods","text":"Below is a quick command line example using CURL: $ curl -X POST -H \"Content-Type: application/json\" --data '{\"jsonrpc\": \"2.0\", \"id\": 1, \"method\": \"eth_blockNumber\", \"params\": []}' \"https://mainnet.backbonecabal.xyz/YOUR-API-KEY\" The result should look something like this: $ { \"jsonrpc\" : \"2.0\" , \"result\" : \"0x3ccb11\" , \"id\" :1 } NOTE: \u201c0x3ccb11\u201d will be replaced with the block number of the most recent block on that network Read more about JSON RPC Important to note that JSON-RPC is transport agnostic, meaning same concepts can be used over HTTP, WebSockets or other message passing environments. All JSON_RPC methods listed in \u2018Ethereum API\u2019 are also supported over websockets.","title":"JSON-RPC Methods"},{"location":"gettingStarted/makeRequests/#rest-like-backbone-api","text":"https://api.backbonecabal.xyz/v1/jsonrpc/mainnet/eth_blockNumber?token=YOUR-API-KEY","title":"Rest-like Backbone API"},{"location":"gettingStarted/makeRequests/#subscriptions-and-filters","text":"In addition to the Ethereum API, Geth version 1.4 has experimental support for pub/sub using subscriptions. This, along with filters, is supported through Backbone\u2019s WebSocket endpoint.","title":"Subscriptions and Filters"},{"location":"gettingStarted/usefulLinks/","text":"Useful Links \uf0c1 Ethereum JSON-RPC documentation IPFS API documentation Ethereum Pub/Sub API documentation Parity Ethereum Pub/Sub API documentation Parity Pub/Sub API documentation","title":"Useful Links"},{"location":"gettingStarted/usefulLinks/#useful-links","text":"Ethereum JSON-RPC documentation IPFS API documentation Ethereum Pub/Sub API documentation Parity Ethereum Pub/Sub API documentation Parity Pub/Sub API documentation","title":"Useful Links"},{"location":"wss/eth_getFilterChanges/","text":"eth_getFilterChanges \uf0c1 Polling method for a filter, which returns an array of logs which occurred since last poll. EXAMPLE >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getFilterChanges\" , \"params\" : [ \"0xfe704947a3cd3ca12541458a4321c869\" ] , \"id\" :73 } RESPONSE \uf0c1 RESULT FIELDS LOG OBJECT ARRAY - Array of log objects, or an empty array if nothing has changed since last poll. For filters created with eth_newBlockFilter the return are block hashes (32 Bytes), e.g. [\u201c0x3454645634534\u2026\u201d]. For filters created with eth_newPendingTransactionFilter the return are transaction hashes (32 Bytes), e.g. [\u201c0x6345343454645\u2026\u201d]. For filters created with eth_newFilter logs are objects with following params: removed : true when the log was removed, due to a chain reorganization. false if its a valid log. logIndex : integer of the log index position in the block. null when its pending log. transactionIndex : integer of the transactions index position log was created from. null when its pending log. transactionHash : 32 Bytes - hash of the transactions this log was created from. null when its pending log. blockHash : 32 Bytes - hash of the block where this log was in. null when its pending. null when its pending log. blockNumber : the block number where this log was in. null when its pending. null when its pending log. address : 20 Bytes - address from which this log originated. data : DATA - contains the non-indexed arguments of the log. topics : Array of DATA - Array of 0 to 4 32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256)), except you declared the event with the anonymous specifier.) BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 73 , \"result\" : [{ \"address\" : \"0xb5a5f22694352c15b00323844ad545abb2b11028\" , \"blockHash\" : \"0x99e8663c7b6d8bba3c7627a17d774238eae3e793dee30008debb2699666657de\" , \"blockNumber\" : \"0x5d12ab\" , \"data\" : \"0x0000000000000000000000000000000000000000000000a247d7a2955b61d000\" , \"logIndex\" : \"0x0\" , \"removed\" : false , \"topics\" : [ \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\" , \"0x000000000000000000000000bdc0afe57b8e9468aa95396da2ab2063e595f37e\" , \"0x0000000000000000000000007503e090dc2b64a88f034fb45e247cbd82b8741e\" ], \"transactionHash\" : \"0xa74c2432c9cf7dbb875a385a2411fd8f13ca9ec12216864b1a1ead3c99de99cd\" , \"transactionIndex\" : \"0x3\" }, { \"address\" : \"0xe38165c9f6deb144afc9c32c206b024817e1496d\" , \"blockHash\" : \"0x99e8663c7b6d8bba3c7627a17d774238eae3e793dee30008debb2699666657de\" , \"blockNumber\" : \"0x5d12ab\" , \"data\" : \"0x0000000000000000000000000000000000000000000000000000000025c6b720\" , \"logIndex\" : \"0x3\" , \"removed\" : false , \"topics\" : [ \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\" , \"0x00000000000000000000000080e73e47173b2d00b531bf83bc39e710157125c3\" , \"0x0000000000000000000000008f6cc93795969e5bbbf07c66dfee7d41ad24f1ef\" ], \"transactionHash\" : \"0x9e8f1cb1facb9a11a1cf947634053a0b2d557399f926b12127aa10497a2f0153\" , \"transactionIndex\" : \"0x5\" } }","title":"eth_getFilterChanges"},{"location":"wss/eth_getFilterChanges/#eth_getfilterchanges","text":"Polling method for a filter, which returns an array of logs which occurred since last poll.","title":"eth_getFilterChanges"},{"location":"wss/eth_getFilterChanges/#response","text":"","title":"RESPONSE"},{"location":"wss/eth_getFilterLogs/","text":"eth_getFilterLogs \uf0c1 Returns an array of all logs matching filter with given id. REQUEST PARAMS \uf0c1 FILTER OBJECT fromBlock [optional, default: \u201clatest\u201d] Integer block number, or \u201clatest\u201d for the last mined block or \u201cpending\u201d, \u201cearliest\u201d for not yet mined transactions. toBlock [optional, default: \u201clatest\u201d] Integer block number, or \u201clatest\u201d for the last mined block or \u201cpending\u201d, \u201cearliest\u201d for not yet mined transactions. address : [optional] (20 Bytes) Contract address or a list of addresses from which logs should originate. topics : [optional] Array of 32 Bytes DATA topics. Topics are order-dependent. Each topic can also be an array of DATA with \u201cor\u201d options. blockhash: [optional, future] With the addition of EIP-234, blockHash will be a new filter option which restricts the logs returned to the single block with the 32-byte hash blockHash. Using blockHash is equivalent to fromBlock = toBlock = the block number with hash blockHash. If blockHash is present in in the filter criteria, then neither fromBlock nor toBlock are allowed. EXAMPLE >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_getFilterLogs\" , \"params\" : [ \"0xfe704947a3cd3ca12541458a4321c869\" ] , \"id\" :73 } RESPONSE \uf0c1 RESULT FIELDS LOG OBJECT ARRAY - Array of log objects, or an empty array if nothing has changed since last poll. For filters created with eth_newBlockFilter the return are block hashes (32 Bytes), e.g. [\u201c0x3454645634534\u2026\u201d]. For filters created with eth_newPendingTransactionFilter the return are transaction hashes (32 Bytes), e.g. [\u201c0x6345343454645\u2026\u201d]. For filters created with eth_newFilter logs are objects with following params: removed : true when the log was removed, due to a chain reorganization. false if its a valid log. logIndex : integer of the log index position in the block. null when its pending log. transactionIndex : integer of the transactions index position log was created from. null when its pending log. transactionHash : 32 Bytes - hash of the transactions this log was created from. null when its pending log. blockHash : 32 Bytes - hash of the block where this log was in. null when its pending. null when its pending log. blockNumber : the block number where this log was in. null when its pending. null when its pending log. address : 20 Bytes - address from which this log originated. data : DATA - contains the non-indexed arguments of the log. topics : Array of DATA - Array of 0 to 4 32 Bytes DATA of indexed log arguments. (In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256)), except you declared the event with the anonymous specifier.) BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 73 , \"result\" : [{ \"address\" : \"0xb5a5f22694352c15b00323844ad545abb2b11028\" , \"blockHash\" : \"0x99e8663c7b6d8bba3c7627a17d774238eae3e793dee30008debb2699666657de\" , \"blockNumber\" : \"0x5d12ab\" , \"data\" : \"0x0000000000000000000000000000000000000000000000a247d7a2955b61d000\" , \"logIndex\" : \"0x0\" , \"removed\" : false , \"topics\" : [ \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\" , \"0x000000000000000000000000bdc0afe57b8e9468aa95396da2ab2063e595f37e\" , \"0x0000000000000000000000007503e090dc2b64a88f034fb45e247cbd82b8741e\" ], \"transactionHash\" : \"0xa74c2432c9cf7dbb875a385a2411fd8f13ca9ec12216864b1a1ead3c99de99cd\" , \"transactionIndex\" : \"0x3\" }, { \"address\" : \"0xe38165c9f6deb144afc9c32c206b024817e1496d\" , \"blockHash\" : \"0x99e8663c7b6d8bba3c7627a17d774238eae3e793dee30008debb2699666657de\" , \"blockNumber\" : \"0x5d12ab\" , \"data\" : \"0x0000000000000000000000000000000000000000000000000000000025c6b720\" , \"logIndex\" : \"0x3\" , \"removed\" : false , \"topics\" : [ \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\" , \"0x00000000000000000000000080e73e47173b2d00b531bf83bc39e710157125c3\" , \"0x0000000000000000000000008f6cc93795969e5bbbf07c66dfee7d41ad24f1ef\" ], \"transactionHash\" : \"0x9e8f1cb1facb9a11a1cf947634053a0b2d557399f926b12127aa10497a2f0153\" , \"transactionIndex\" : \"0x5\" } }","title":"eth_getFilterLogs"},{"location":"wss/eth_getFilterLogs/#eth_getfilterlogs","text":"Returns an array of all logs matching filter with given id.","title":"eth_getFilterLogs"},{"location":"wss/eth_getFilterLogs/#request-params","text":"FILTER OBJECT fromBlock [optional, default: \u201clatest\u201d] Integer block number, or \u201clatest\u201d for the last mined block or \u201cpending\u201d, \u201cearliest\u201d for not yet mined transactions. toBlock [optional, default: \u201clatest\u201d] Integer block number, or \u201clatest\u201d for the last mined block or \u201cpending\u201d, \u201cearliest\u201d for not yet mined transactions. address : [optional] (20 Bytes) Contract address or a list of addresses from which logs should originate. topics : [optional] Array of 32 Bytes DATA topics. Topics are order-dependent. Each topic can also be an array of DATA with \u201cor\u201d options. blockhash: [optional, future] With the addition of EIP-234, blockHash will be a new filter option which restricts the logs returned to the single block with the 32-byte hash blockHash. Using blockHash is equivalent to fromBlock = toBlock = the block number with hash blockHash. If blockHash is present in in the filter criteria, then neither fromBlock nor toBlock are allowed.","title":"REQUEST PARAMS"},{"location":"wss/eth_getFilterLogs/#response","text":"","title":"RESPONSE"},{"location":"wss/eth_newBlockFilter/","text":"eth_newBlockFilter \uf0c1 Creates a filter in the node, to notify when a new block arrives. To check if the state has changed, call eth_getFilterChanges. EXAMPLE >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_newBlockFilter\" , \"params\" : [] , \"id\" :73 } RESPONSE \uf0c1 RESULT FIELDS FILTER ID - A string denoting the newly created filter id BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 73 , \"result\" : \"0xfe704947a3cd3ca12541458a4321c869\" }","title":"eth_newBlockFilter"},{"location":"wss/eth_newBlockFilter/#eth_newblockfilter","text":"Creates a filter in the node, to notify when a new block arrives. To check if the state has changed, call eth_getFilterChanges.","title":"eth_newBlockFilter"},{"location":"wss/eth_newBlockFilter/#response","text":"","title":"RESPONSE"},{"location":"wss/eth_newFilter/","text":"eth_newFilter \uf0c1 Creates a filter object, based on filter options, to notify when the state changes (logs). To check if the state has changed, call eth_getFilterChanges REQUEST PAYLOAD FILTER OBJECT address [optional] - a string representing the address (20 bytes) to check for balance fromBlock [optional, default is \u201clatest\u201d] - an integer block number, or the string \u201clatest\u201d, \u201cearliest\u201d or \u201cpending\u201d toBlock [optional, default is \u201clatest\u201d] - an integer block number, or the string \u201clatest\u201d, \u201cearliest\u201d or \u201cpending\u201d topics [optional] - Array of 32 Bytes DATA topics. Topics are order-dependent. A note on specifying topic filters: Topics are order-dependent. A transaction with a log with topics [A, B] will be matched by the following topic filters: [] - anything\u201d [A] - A in first position (and anything after) [null, B] - anything in first position AND B in second position (and anything after) [A, B] - A in first position AND B in second position (and anything after)\u201d [[A, B], [A, B]] - (A OR B) in first position AND (A OR B) in second position (and anything after) EXAMPLE >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_newFilter\" , \"params\" : [{ \"topics\" : [ \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\" ]}] , \"id\" :73 } RESPONSE \uf0c1 RESULT FIELDS FILTER ID - A string denoting the newly created filter id BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 73 , \"result\" : \"0x7db09f66a25e197d995d3895278b731\" }","title":"eth_newFilter"},{"location":"wss/eth_newFilter/#eth_newfilter","text":"Creates a filter object, based on filter options, to notify when the state changes (logs). To check if the state has changed, call eth_getFilterChanges","title":"eth_newFilter"},{"location":"wss/eth_newFilter/#response","text":"","title":"RESPONSE"},{"location":"wss/eth_newPendingTransactionFilter/","text":"eth_newPendingTransactionFilter \uf0c1 Creates a filter in the node, to notify when new pending transactions arrive. To check if the state has changed, call eth_getFilterChanges. EXAMPLE >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_newPendingTransactionFilter\" , \"params\" : [] , \"id\" :73 } RESPONSE \uf0c1 RESULT FIELDS FILTER ID - A string denoting the newly created filter id BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 73 , \"result\" : \"0xfe704947a3cd3ca12541458a4321c869\" }","title":"eth_newPendingTransactionFilter"},{"location":"wss/eth_newPendingTransactionFilter/#eth_newpendingtransactionfilter","text":"Creates a filter in the node, to notify when new pending transactions arrive. To check if the state has changed, call eth_getFilterChanges.","title":"eth_newPendingTransactionFilter"},{"location":"wss/eth_newPendingTransactionFilter/#response","text":"","title":"RESPONSE"},{"location":"wss/eth_subscribe/","text":"eth_subscribe \uf0c1 Creates a new subscription over particular events. The node will return a subscription id. For each event that matches the subscription a notification with relevant data is send together with the subscription id. REQUEST PARAMS \uf0c1 SUBSCRIPTION TYPE NAME [required] newHeads - Subscribing to this, fires a notification each time a new header is appended to the chain, including chain reorganizations. Users can use the bloom filter to determine if the block contains logs that are interested to them. logs - Returns logs that are included in new imported blocks and match the given filter criteria. In case of a chain reorganization previous sent logs that are on the old chain will be resend with the removed property set to true. Logs from transactions that ended up in the new chain are emitted. Therefore a subscription can emit logs for the same transaction multiple times. address (optional) - either an address or an array of addresses. Only logs that are created from these addresses are returned (optional) topics (optional) - only logs which match the specified topics (optional) newPendingTransactions - Returns the hash for all transactions that are added to the pending state and are signed with a key that is available in the node. When a transaction that was previously part of the canonical chain isn\u2019t part of the new canonical chain after a reogranization its again emitted. syncing - Indicates when the node starts or stops synchronizing. The result can either be a boolean indicating that the synchronization has started (true), finished (false) or an object with various progress indicators. NOT SUPPORTED ON KOVAN! EXAMPLE >wscat -c wss://mainnet.backbonecabal.xyz/ws // newHeads > { \"id\" : 1 , \"method\" : \"eth_subscribe\" , \"params\" : [ \"newHeads\" ]} // logs > { \"id\" : 1 , \"method\" : \"eth_subscribe\" , \"params\" : [ \"logs\" , { \"address\" : \"0x8320fe7702b96808f7bbc0d4a888ed1468216cfd\" , \"topics\" : [ \"0xd78a0cb8bb633d06981248b816e7bd33c2a35a6089241d099fa519e361cab902\" ]}]} // newPendingTransactions > { \"id\" : 1 , \"method\" : \"eth_subscribe\" , \"params\" : [ \"newPendingTransactions\" ]} // syncing ( not supported on Kovan ) > { \"id\" : 1 , \"method\" : \"eth_subscribe\" , \"params\" : [ \"syncing\" ]} RESPONSE \uf0c1 RESULT FIELDS SUBSCRIPTION ID - ID of the newly created subscription on the node BODY // New Subscription response { \"id\" : 1 , \"jsonrpc\" : \"2.0\" , \"result\" : \"0x9cef478923ff08bf67fde6c64013158d\" } // newHeads { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_subscription\" , \"params\" : { \"result\" : { \"difficulty\" : \"0x15d9223a23aa\" , \"extraData\" : \"0xd983010305844765746887676f312e342e328777696e646f7773\" , \"gasLimit\" : \"0x47e7c4\" , \"gasUsed\" : \"0x38658\" , \"logsBloom\" : \"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\" , \"miner\" : \"0xf8b483dba2c3b7176a3da549ad41a48bb3121069\" , \"nonce\" : \"0x084149998194cc5f\" , \"number\" : \"0x1348c9\" , \"parentHash\" : \"0x7736fab79e05dc611604d22470dadad26f56fe494421b5b333de816ce1f25701\" , \"receiptRoot\" : \"0x2fab35823ad00c7bb388595cb46652fe7886e00660a01e867824d3dceb1c8d36\" , \"sha3Uncles\" : \"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347\" , \"stateRoot\" : \"0xb3346685172db67de536d8765c43c31009d0eb3bd9c501c9be3229203f15f378\" , \"timestamp\" : \"0x56ffeff8\" , \"transactionsRoot\" : \"0x0167ffa60e3ebc0b080cdb95f7c0087dd6c0e61413140e39d94d3468d7c9689f\" }, \"subscription\" : \"0x9ce59a13059e417087c02d3236a0b1cc\" } } // logs Subscription { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_subscription\" , \"params\" : { \"subscription\" : \"0x4a8a4c0517381924f9838102c5a4dcb7\" , \"result\" : { \"address\" : \"0x8320fe7702b96808f7bbc0d4a888ed1468216cfd\" , \"blockHash\" : \"0x61cdb2a09ab99abf791d474f20c2ea89bf8de2923a2d42bb49944c8c993cbf04\" , \"blockNumber\" : \"0x29e87\" , \"data\" : \"0x00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000003\" , \"logIndex\" : \"0x0\" , \"topics\" :[ \"0xd78a0cb8bb633d06981248b816e7bd33c2a35a6089241d099fa519e361cab902\" ], \"transactionHash\" : \"0xe044554a0a55067caafd07f8020ab9f2af60bdfe337e395ecd84b4877a3d1ab4\" , \"transactionIndex\" : \"0x0\" } } } // newPendingTransaction Subscription { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_subscription\" , \"params\" :{ \"subscription\" : \"0xc3b33aa549fb9a60e95d21862596617c\" , \"result\" : \"0xd6fdc5cc41a9959e922f30cb772a9aef46f4daea279307bc5f7024edc4ccd7fa\" } } // syncing subscription (not supported on Kovan) { \"subscription\" : \"0xe2ffeb2703bcf602d42922385829ce96\" , \"result\" : { \"syncing\" : true , \"status\" : { \"startingBlock\" : 674427 , \"currentBlock\" : 67400 , \"highestBlock\" : 674432 , \"pulledStates\" : 0 , \"knownStates\" : 0 } } }","title":"eth_subscribe"},{"location":"wss/eth_subscribe/#eth_subscribe","text":"Creates a new subscription over particular events. The node will return a subscription id. For each event that matches the subscription a notification with relevant data is send together with the subscription id.","title":"eth_subscribe"},{"location":"wss/eth_subscribe/#request-params","text":"SUBSCRIPTION TYPE NAME [required] newHeads - Subscribing to this, fires a notification each time a new header is appended to the chain, including chain reorganizations. Users can use the bloom filter to determine if the block contains logs that are interested to them. logs - Returns logs that are included in new imported blocks and match the given filter criteria. In case of a chain reorganization previous sent logs that are on the old chain will be resend with the removed property set to true. Logs from transactions that ended up in the new chain are emitted. Therefore a subscription can emit logs for the same transaction multiple times. address (optional) - either an address or an array of addresses. Only logs that are created from these addresses are returned (optional) topics (optional) - only logs which match the specified topics (optional) newPendingTransactions - Returns the hash for all transactions that are added to the pending state and are signed with a key that is available in the node. When a transaction that was previously part of the canonical chain isn\u2019t part of the new canonical chain after a reogranization its again emitted. syncing - Indicates when the node starts or stops synchronizing. The result can either be a boolean indicating that the synchronization has started (true), finished (false) or an object with various progress indicators. NOT SUPPORTED ON KOVAN!","title":"REQUEST PARAMS"},{"location":"wss/eth_subscribe/#response","text":"","title":"RESPONSE"},{"location":"wss/eth_uninstallFilter/","text":"eth_uninstallFilter \uf0c1 Uninstalls a filter with given id. Should always be called when watch is no longer needed. Additonally Filters timeout when they aren\u2019t requested with eth_getFilterChanges for a period of time. EXAMPLE >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"jsonrpc\" : \"2.0\" , \"method\" : \"eth_uninstallFilter\" , \"params\" : [ \"0xfe704947a3cd3ca12541458a4321c869\" ] , \"id\" :73 } RESPONSE \uf0c1 RESULT FIELDS UNINSTALLED FLAG - true if the filter was successfully uninstalled, otherwise false. BODY { \"jsonrpc\" : \"2.0\" , \"id\" : 73 , \"result\" : true }","title":"eth_uninstallFilter"},{"location":"wss/eth_uninstallFilter/#eth_uninstallfilter","text":"Uninstalls a filter with given id. Should always be called when watch is no longer needed. Additonally Filters timeout when they aren\u2019t requested with eth_getFilterChanges for a period of time.","title":"eth_uninstallFilter"},{"location":"wss/eth_uninstallFilter/#response","text":"","title":"RESPONSE"},{"location":"wss/eth_unsubscribe/","text":"eth_unsubscribe \uf0c1 Subscriptions are cancelled with a regular RPC call with eth_unsubscribe as method and the subscription id as first parameter. It returns a bool indicating if the subscription was cancelled successful. REQUEST PARAMS \uf0c1 SUBSCRIPTION ID [required] EXAMPLE >wscat -c wss://mainnet.backbonecabal.xyz/ws > { \"id\" : 1 , \"method\" : \"eth_unsubscribe\" , \"params\" : [ \"0x9cef478923ff08bf67fde6c64013158d\" ]} RESPONSE \uf0c1 RESULT FIELDS UNSUBSCRIBED FLAG - true if the subscription was cancelled successful. BODY { \"id\" : 1 , \"jsonrpc\" : \"2.0\" , \"result\" : true }","title":"eth_unsubscribe"},{"location":"wss/eth_unsubscribe/#eth_unsubscribe","text":"Subscriptions are cancelled with a regular RPC call with eth_unsubscribe as method and the subscription id as first parameter. It returns a bool indicating if the subscription was cancelled successful.","title":"eth_unsubscribe"},{"location":"wss/eth_unsubscribe/#request-params","text":"SUBSCRIPTION ID [required]","title":"REQUEST PARAMS"},{"location":"wss/eth_unsubscribe/#response","text":"","title":"RESPONSE"},{"location":"wss/faq/","text":"FAQ / FYI \uf0c1 What is the Backbone endpoint for WebSockets? wss://<network>.backbonecabal.xyz/ws What are the supported networks? Mainnet, Ropsten, Rinkeby, Kovan Is batch support available? Yes Is compression enabled? Yes Max payload size? 128MB Why does my websocket connection disconnect after a while? Idle connections that exceed beyond an hour will get disconnected. Adding \u2018pings\u2019 to your websocket connection will prevent the connection from going idle. Any unrecognized requests will trigger the server to close the connection with an error message. Non-empty \u2018Sec-WebSocket-Protocol\u2019 header error? web3.js 1.0.0-beta.34 has an open issue with request headers https://github.com/ethereum/web3.js/issues/1559 . Please revert/downgrade to 1.0.0-beta.33. Why is includeTransactions option not working for eth_subscribe? Though the includeTransactions option is included in the Ethereum Pub/Sub API documentation, currently it is not returning the expected results. For more information: https://github.com/ethereum/go-ethereum/issues/15804 .","title":"FAQ / FYI"},{"location":"wss/faq/#faq-fyi","text":"What is the Backbone endpoint for WebSockets? wss://<network>.backbonecabal.xyz/ws What are the supported networks? Mainnet, Ropsten, Rinkeby, Kovan Is batch support available? Yes Is compression enabled? Yes Max payload size? 128MB Why does my websocket connection disconnect after a while? Idle connections that exceed beyond an hour will get disconnected. Adding \u2018pings\u2019 to your websocket connection will prevent the connection from going idle. Any unrecognized requests will trigger the server to close the connection with an error message. Non-empty \u2018Sec-WebSocket-Protocol\u2019 header error? web3.js 1.0.0-beta.34 has an open issue with request headers https://github.com/ethereum/web3.js/issues/1559 . Please revert/downgrade to 1.0.0-beta.33. Why is includeTransactions option not working for eth_subscribe? Though the includeTransactions option is included in the Ethereum Pub/Sub API documentation, currently it is not returning the expected results. For more information: https://github.com/ethereum/go-ethereum/issues/15804 .","title":"FAQ / FYI"},{"location":"wss/introduction/","text":"Introduction \uf0c1 Backbone\u2019s websocket endpoint provides support for Pub/Sub API as well as JSON-RPC filter support. The regular Ethereum API is also supported and documented in the \u2018examples\u2019 portion of \u2018Ethereum API\u2019 All examples in this reference section uses WSCAT, but will work with any tool that supports websockets. Some tools you can use for making these requests WSCAT Advanced Rest Client EXAMPLE The following is an example showing a connection to the WebSockets endpoint and using subscriptions through web3.js 1.0 NOTE: web3.js 1.0.0-beta.34 has an open issue with request headers. ( https://github.com/ethereum/web3.js/issues/1559 ) Users will have to revert to version 1.0.0-beta.33 to avoid the issue. const Web3 = require ( \"web3\" ); let web3 = new Web3 ( new Web3 . providers . WebsocketProvider ( \"wss://mainnet.backbonecabal.xyz/ws\" ) ); const instance = new web3 . eth . Contract ( < abi > , < address > ); instance . getPastEvents ( \"SomeEvent\" , { fromBlock : 0 , toBlock : \"latest\" }, ( errors , events ) => { if ( ! errors ) { // process events } } );","title":"Introduction"},{"location":"wss/introduction/#introduction","text":"Backbone\u2019s websocket endpoint provides support for Pub/Sub API as well as JSON-RPC filter support. The regular Ethereum API is also supported and documented in the \u2018examples\u2019 portion of \u2018Ethereum API\u2019 All examples in this reference section uses WSCAT, but will work with any tool that supports websockets. Some tools you can use for making these requests WSCAT Advanced Rest Client","title":"Introduction"},{"location":"wss/parity_subscribe/","text":"parity_subscribe \uf0c1 Starts a subscription (on WebSockets / IPC / TCP transports) to results of calling some other RPC method. For every change in returned value of that RPC call a JSON-RPC notification with result and subscription ID will be sent to a client. NOTE: parity_subscribe is only supported on the Kovan network REQUEST PARAMS \uf0c1 RPC method name [required] RPC method name (string type) OPTIONAL ARGUMENTS Params - Parameters passed to RPC method EXAMPLE >wscat -c wss://kovan.backbonecabal.xyz/ws // subscribe to eth_getBalance > { \"method\" : \"parity_subscribe\" , \"params\" : [ \"eth_getBalance\" , [ \"0x004702bdcC3C7dbFfd943136107E70B827028600\" , \"latest\" ]] , \"id\" :1, \"jsonrpc\" : \"2.0\" } RESPONSE \uf0c1 RESULT FIELDS RESULT - ID of the newly created subscription on the node BODY // New Subscription response { \"jsonrpc\" : \"2.0\" , \"result\" : \"0x070fa1c4d1b3fd81\" , \"id\" : 1 } // eth_getBalance subscription notification { \"jsonrpc\" : \"2.0\" , \"method\" : \"parity_subscription\" , \"params\" : { \"result\" : \"0x36464dbbdd98953718\" , \"subscription\" : \"0x49a3a64111acb418\" } }","title":"parity_subscribe"},{"location":"wss/parity_subscribe/#parity_subscribe","text":"Starts a subscription (on WebSockets / IPC / TCP transports) to results of calling some other RPC method. For every change in returned value of that RPC call a JSON-RPC notification with result and subscription ID will be sent to a client. NOTE: parity_subscribe is only supported on the Kovan network","title":"parity_subscribe"},{"location":"wss/parity_subscribe/#request-params","text":"RPC method name [required] RPC method name (string type) OPTIONAL ARGUMENTS Params - Parameters passed to RPC method","title":"REQUEST PARAMS"},{"location":"wss/parity_subscribe/#response","text":"","title":"RESPONSE"},{"location":"wss/parity_unsubscribe/","text":"parity_unsubscribe \uf0c1 Unsubscribes from a subscription. NOTE: parity_unsubscribe is only supported on the Kovan network REQUEST PARAMS \uf0c1 SUBSCRIPTION ID [required] EXAMPLE >wscat -c wss://kovan.backbonecabal.xyz/ws > { \"method\" : \"parity_unsubscribe\" , \"params\" : [ \"0x070fa1c4d1b3fd81\" ] , \"id\" :1, \"jsonrpc\" : \"2.0\" } RESPONSE \uf0c1 RESULT FIELDS UNSUBSCRIBED FLAG - true if the subscription was cancelled successful. BODY { \"id\" : 1 , \"jsonrpc\" : \"2.0\" , \"result\" : true }","title":"parity_unsubscribe"},{"location":"wss/parity_unsubscribe/#parity_unsubscribe","text":"Unsubscribes from a subscription. NOTE: parity_unsubscribe is only supported on the Kovan network","title":"parity_unsubscribe"},{"location":"wss/parity_unsubscribe/#request-params","text":"SUBSCRIPTION ID [required]","title":"REQUEST PARAMS"},{"location":"wss/parity_unsubscribe/#response","text":"","title":"RESPONSE"}]}